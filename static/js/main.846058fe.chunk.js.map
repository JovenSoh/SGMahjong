{"version":3,"sources":["components/Mahjong.js","components/Tile.js","components/Tileset.js","components/NameCard.js","components/OtherPlayer.js","components/Discards.js","components/Unselect.js","components/Actions.js","components/Board.js","components/Summary.js","components/ScoreInfo.js","components/Information.js","components/Username.js","components/Table.js","videos/mahjongVid.webm","components/Menu.js","App.js","index.js"],"names":["compare","a","b","suit","value","getChow","chowSet","result","map","Map","item","has","set","push","id","picture","checkGame","tiles","revealed","bonusTiles","tableWind","yourWind","lastDiscard","drawn","summary","summary_combination","hand","concat","sort","mahjong","combination","name","points","lookupPair","reduce","e","pairs","filter","console","log","length","十三幺","十三幺Unique","v","JSON","stringify","values","chowSets","i","potentialChow","chowA","indexOf","chowB","findIndex","chowC","splice","lookup","pongSets","eye","checkMahjong","game","special","winningSet","suits","Set","honors","includes","one9","animals","animalPoints","winds","windPoints","dragon","dragonPoints","Math","floor","tableWindPoints","yourWindPoints","add","accumulator","combinationPoints","totalPoints","selfDrawn","Tile","color","hoveredTile","src","h","borderRadius","borderWidth","borderColor","borderStyle","boxShadow","opacity","Tileset","direction","spacing","tile","NameCard","playerID","username","currentPlayer","wind","textColor","overflow","bgColor","px","p","w","OtherPlayer","gameState","gameStateIndex","playerIndex","hiddenListV","Array","apply","handLength","bg","revealedTiles","hiddenList","Discards","discards","setHoveredTile","handleHover","tileList","motion","div","onHoverStart","onHoverEnd","whileHover","scale","Unselect","props","ref","handleSelectTile","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","Actions","sequentialTiles","pongTiles","kongTiles","handleChow","handlePong","handleKong","handleGame","chowAction","_hover","onClick","pongAction","kongAction","type","slice","variant","gameAction","Board","clientID","newTile","currentTurn","selectedTile","handleDiscard","useState","tileVariants","selected","y","unselected","idx","variants","animate","handleClickTile","m","mt","count","row","position","zIndex","mb","Summary","roundEnd","handleNewGame","draw","isOpen","onOpen","onClose","newGame","setNewGame","setTimeout","nameDict","allPong","臭平和","平和","清一色","混一色","oneNine","halfOneNine","七对子","summary_filtered","Object","keys","forEach","key","table","isNumeric","isDisabled","size","ScoreInfo","score","info","pictures","useDisclosure","onToggle","in","split","sentence","align","justifyContent","fontSize","Information","useClipboard","window","location","href","hasCopied","onCopy","player","flowerIndex","scoreTable","pettyTable","find","mr","isFitted","fallbackSrc","isAttached","disabled","textAlign","isReadOnly","Username","sendMessage","defaultIsOpen","setUsername","submitUsername","closeOnOverlayClick","onKeyPress","onChange","placeholder","my","Table","sequentialTiles_top","sequentialTiles_mid","sequentialTiles_bot","gameId","useParams","socketUrl","setMessageHistory","setOnlineUsers","setClientID","winnerID","setWinnerID","setCurrentPlayer","previousPlayer","setPreviousPlayer","setTiles","setNewTile","setBonusTiles","setRevealedTiles","setYourWind","setTableWind","setDiscards","setLastDiscard","setSequentialTiles","setPongTiles","setKongTiles","setGame","setSummary","setCurrentTurn","isOpenSummary","onOpenSummary","onCloseSummary","setDraw","setRoundEnd","minimumPoints","delay","setGameState","setSelectedTile","useWebSocket","lastMessage","readyState","connectionStatus","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","data","prev","userList","replace","gameState_temp","parse","clientID_temp","tiles_temp","game_temp","summary_temp","four_concealed","kongSets","one_concealed","checkKong","bonusTiles_temp","bonuses","bonus","discards_temp","at","totalpoints","sameTiles","sequentialTiles_temp","checkValidMoves","revealedTiles_temp","newTiles","currentPlayer_temp","substring","pongSet","kongSet","Menu","navigate","useNavigate","gameCode","setGameCode","autoPlay","loop","muted","bgVid","s4","random","toString","gameID","focusBorderColor","handleCodeChange","alert","App","path","exact","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.846058fe.chunk.js","sourcesContent":["//sort hand\r\nexport function compare( a, b ) {\r\n    if ( a.suit < b.suit ){\r\n      return -1;\r\n    }\r\n    if ( a.suit > b.suit ){\r\n      return 1;\r\n    }\r\n    if ( a.suit === b.suit ){\r\n      if ( a.value < b.value ){\r\n        return -1;\r\n      }\r\n      if ( a.value > b.value ){\r\n        return 1;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\nexport function getChow(chowSet) {\r\n  const result = [];\r\n  const map = new Map();\r\n  for (const item of chowSet) {\r\n      if(!map.has(item.value)){\r\n          map.set(item.value, true);    // set any value to Map\r\n          result.push({\r\n              suit: item.suit,\r\n              value: item.value,\r\n              id: item.id,\r\n              picture: item.picture\r\n          });\r\n      }\r\n  }\r\n  return result\r\n}\r\n\r\nexport function checkMahjong(hand) {\r\n  //check for special cases\r\n  //1. 7 pair\r\n  const lookupPair = hand.reduce((a, e) => {\r\n    a[`${e.suit} ${e.value}`] = ++a[`${e.suit} ${e.value}`] || 0;\r\n    return a;\r\n  }, {});\r\n\r\n  let pairs = hand.filter(e => lookupPair[`${e.suit} ${e.value}`] === 1)\r\n\r\n  console.log(\"Pairs: \",pairs)\r\n  if (pairs.length === 14){\r\n    return [true, [], [], [], \"七对子\"]\r\n  }\r\n\r\n  //2. 13 wonders\r\n  let 十三幺 = hand.filter(e => (e.suit === \"bamboo\" && e.value === 1) || (e.suit === \"bamboo\" && e.value === 9) || (e.suit === \"circles\" && e.value === 1) || (e.suit === \"circles\" && e.value === 9) || (e.suit === \"numbers\" && e.value === 1) || (e.suit === \"numbers\" && e.value === 9) || (e.suit === \"~north\") || (e.suit === \"~south\") || (e.suit === \"~east\") || (e.suit === \"~west\") || (e.suit === \"~red\") || (e.suit === \"~green\") || (e.suit === \"~white\") )\r\n  console.log(\"十三幺: \",十三幺)\r\n  let 十三幺Unique =  [...new Map(十三幺.map(v => [JSON.stringify([v.suit,v.value]), v])).values()]\r\n  if (十三幺.length === 14 && 十三幺Unique.length === 13){\r\n    return [true,[],[],[],\"十三幺\"]\r\n  }\r\n\r\n  //filter out the chows\r\n  let chowSets = []\r\n  for (let i=hand.length - 1; i>=2; i--) {\r\n    if (hand[i]){\r\n      let potentialChow =  hand.filter(e => (e.suit === hand[i].suit) && (e.value === hand[i].value-1 || e.value === hand[i].value-2 ) )\r\n      potentialChow = getChow(potentialChow)\r\n      if (potentialChow.length === 2) {\r\n        chowSets = chowSets.concat([[potentialChow[0],potentialChow[1],hand[i]]])\r\n        let chowA = hand.indexOf(hand[i])\r\n        let chowB = hand.findIndex(e => (e.suit === potentialChow[1].suit && e.value === potentialChow[1].value && e.id === potentialChow[1].id))\r\n        let chowC = hand.findIndex(e => (e.suit === potentialChow[0].suit && e.value === potentialChow[0].value && e.id === potentialChow[0].id))\r\n        hand.splice(chowA,1)\r\n        hand.splice(chowB,1)\r\n        hand.splice(chowC,1)\r\n      }\r\n    }\r\n  }\r\n\r\n  //filter out the pongs\r\n  const lookup = hand.reduce((a, e) => {\r\n    a[`${e.suit} ${e.value}`] = ++a[`${e.suit} ${e.value}`] || 0;\r\n    return a;\r\n  }, {});\r\n\r\n  let pongSets = hand.filter(e => lookup[`${e.suit} ${e.value}`] >= 2)\r\n  hand = hand.filter(e => lookup[`${e.suit} ${e.value}`] < 2)\r\n\r\n  let eye = hand\r\n  console.log(\"Chow sets: \", chowSets)\r\n  console.log(\"Pong sets: \", pongSets)\r\n  console.log(\"Eye:\", eye)\r\n  //check eye\r\n  if (eye.length === 2){\r\n    if ((eye[0].suit === eye[1].suit) && (eye[0].value === eye[1].value)){\r\n      return [true, chowSets, pongSets, eye, null]\r\n    }\r\n  }\r\n\r\n  return [false]\r\n\r\n}\r\n\r\nexport function checkGame(tiles, revealed, bonusTiles,tableWind,yourWind, lastDiscard,drawn) {\r\n  let hand = tiles.concat(revealed.concat(lastDiscard).concat(drawn)).sort(compare)\r\n  let mahjong = tiles.concat(revealed.concat(lastDiscard).concat(drawn)).sort(compare)\r\n  let pointsLimit = 5\r\n  let summary, summary_combination\r\n\r\n  //Mahjong hands\r\n  let combination = [\r\n     {name: \"allPong\",\r\n     value: false,\r\n     points: 2},\r\n     {name: \"臭平和\",\r\n     value: false,\r\n     points: 1},\r\n     {name: \"平和\",\r\n     value: false,\r\n     points: 4},\r\n     {name: \"清一色\",\r\n     value: false,\r\n     points: 4},\r\n     {name: \"混一色\",\r\n     value: false,\r\n     points: 2},\r\n     {name: \"oneNine\",\r\n     value: false,\r\n     points: 5},\r\n     {name: \"halfOneNine\",\r\n     value: false,\r\n     points: 1},\r\n     {name: \"七对子\",\r\n     value: false,\r\n     points: 3},\r\n     {name: \"十三幺\",\r\n     value: false,\r\n     points: 5},\r\n  ]\r\n  \r\n  let [game, chowSets, pongSets, eye, special] = checkMahjong(hand)\r\n\r\n  //check strength of hand\r\n  if (special){\r\n    if (special === \"七对子\"){\r\n      combination[combination.findIndex(e => e.name === \"七对子\")].value = true\r\n    } else if (special === \"十三幺\"){\r\n      combination[combination.findIndex(e => e.name === \"十三幺\")].value = true\r\n    }\r\n  }else if (game){\r\n    //all pong game\r\n    if (pongSets.length >= 12){\r\n      combination[combination.findIndex(e => e.name === \"allPong\")].value = true\r\n    }\r\n    //check allChow\r\n    // 1. The EYE cannot be a Dragon Tile or the Prevailing Wind or the Players Wind for that game\r\n    if (eye[0].suit != '~red' && eye[0].suit != '~green' && eye[0].suit !='~white' && eye[0].suit != tableWind && eye[0].suit != yourWind){\r\n      // 2. The tiles must be made up of one EYE and four CHOWs.\r\n      if (chowSets.length === 4){\r\n        // 3. If the player wins the game on a discarded tile, there must be more than one unique tile that could have caused the player to win the game\r\n        if (lastDiscard.length !== 0){\r\n          let winningSet = chowSets.filter(e => e.indexOf(lastDiscard) > 0 )\r\n          if (winningSet[0] === lastDiscard || winningSet[2] === lastDiscard) {\r\n            //check if there are bonus tiles\r\n            if (bonusTiles.length === 0){\r\n              combination[combination.findIndex(e => e.name === \"平和\")].value = true\r\n            }else{\r\n              combination[combination.findIndex(e => e.name === \"臭平和\")].value = true\r\n            }\r\n          }\r\n        //3a.if it's self-drawn\r\n        }else{\r\n          if (bonusTiles.length === 0){\r\n            combination[combination.findIndex(e => e.name === \"平和\")].value = true\r\n          }else{\r\n            combination[combination.findIndex(e => e.name === \"臭平和\")].value = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //check for color game\r\n    let suits = [...new Set(mahjong.map(e => e.suit))]\r\n    let honors = ['~east','~south','~west','~north','~red','~green','~white']\r\n    console.log(\"Suits: \", suits)\r\n    console.log(\"Filtered suits:\", suits.filter(e => !honors.includes(e)))\r\n\r\n    if (suits.length === 1){\r\n      combination[combination.findIndex(e => e.name === \"清一色\")].value = true\r\n    }else if (suits.filter(e => !honors.includes(e)).length === 1){\r\n      combination[combination.findIndex(e => e.name === \"混一色\")].value = true\r\n    }\r\n    //check for ones and nines\r\n    let one9 = [...new Set(mahjong.map(e => e.value))]\r\n    console.log(\"oneNine: \", one9.filter(e => e !== 9 && e !== 1 && e !== null))\r\n\r\n    if (one9.filter(e => e !== 9 && e !== 1).length === 0){\r\n      combination[combination.findIndex(e => e.name === \"oneNine\")].value = true\r\n    }else if (one9.filter(e => e !== 9 && e !== 1 && e !== null).length === 0){\r\n      combination[combination.findIndex(e => e.name === \"halfOneNine\")].value = true\r\n    }\r\n\r\n    //count points\r\n    let points = 0\r\n    //count bonus tiles\r\n    //animal tiles\r\n    let animals = ['cat','mouse','rooster','centipede']\r\n    let animalPoints = bonusTiles.filter(e => animals.includes(e.suit)).length\r\n    console.log(\"Animals: \", animalPoints)\r\n    //wind tiles\r\n    let winds = [\"~east\",\"~south\",\"~west\",\"~north\"]\r\n    let windPoints = bonusTiles.filter(e => !animals.includes(e.suit) && winds[e.value-1] === yourWind ).length\r\n    console.log(\"Winds: \", windPoints)\r\n    //find honors tiles in pong sets\r\n    let dragon = [\"~red\",\"~green\",\"~white\"]\r\n    let dragonPoints = Math.floor(pongSets.filter(e => dragon.includes(e.suit)).length/3)\r\n    console.log(\"Dragon Tiles: \",dragonPoints)\r\n    let tableWindPoints = Math.floor(pongSets.filter(e => e.suit === tableWind).length/3)\r\n    console.log(\"Table Wind: \",tableWindPoints)\r\n    let yourWindPoints = Math.floor(pongSets.filter(e => e.suit === yourWind).length/3)\r\n    console.log(\"Your Wind: \",yourWindPoints)\r\n\r\n    function add(accumulator, a) {\r\n      return accumulator + a\r\n    }\r\n    //find the sum of all points in valid mahjong combinations\r\n    let combinationPoints = combination.filter(e => e.value === true).map(e => e.points).reduce(add,0)\r\n    console.log(\"Combi points: \", combinationPoints)\r\n\r\n    points = (dragonPoints+tableWindPoints+yourWindPoints + combinationPoints + animalPoints + windPoints > pointsLimit) ? pointsLimit : dragonPoints+tableWindPoints+yourWindPoints + combinationPoints + animalPoints + windPoints\r\n    console.log(\"Total points: \", points)\r\n\r\n    summary_combination = combination.filter(e => e.value === true).map(\r\n      function(e){\r\n        return {\r\n          [e.name] : e.points\r\n        }\r\n      }\r\n    )\r\n\r\n    summary = {\r\n      ...summary_combination[0],\r\n      animalPoints: animalPoints,\r\n      windPoints: windPoints,\r\n      dragonPoints: dragonPoints,\r\n      tableWindPoints: tableWindPoints,\r\n      yourWindPoints: yourWindPoints,\r\n      totalPoints: points,\r\n      selfDrawn: lastDiscard.length === 0? true : false\r\n    } \r\n\r\n\r\n }\r\n\r\n  return [game, summary]\r\n}\r\n","import {Box, Image} from \"@chakra-ui/react\"\r\n\r\nexport default function Tile({picture, color, hoveredTile}){\r\n\r\n    if (!color){\r\n        let color = \"#343434\"\r\n    }\r\n\r\n    //if there is a hovered tile\r\n    if (hoveredTile){\r\n        //if hovered tile has the same picture\r\n        if (picture === hoveredTile.picture){\r\n            return(\r\n                <Image src={\"/images/\" + picture + \".jpg\"}  h=\"6vh\" borderRadius=\"5px\" borderWidth=\"1px\" borderColor=\"#343434\" borderStyle=\"solid\" boxShadow={`3px 4px ${color}`} />\r\n            )\r\n        }else{\r\n            return(\r\n                <Image src={\"/images/\" + picture + \".jpg\"} opacity=\"30%\"  h=\"6vh\" borderRadius=\"5px\" borderWidth=\"1px\" borderColor=\"#343434\" borderStyle=\"solid\" boxShadow={`300px 400px 100px ${color}`} />\r\n            )            \r\n        }\r\n    }else{\r\n        return (\r\n            <Image src={\"/images/\" + picture + \".jpg\"}  h=\"6vh\" borderRadius=\"5px\" borderWidth=\"1px\" borderColor=\"#343434\" borderStyle=\"solid\" boxShadow={`3px 4px ${color}`} />\r\n        )\r\n    }\r\n\r\n}","import {HStack, VStack, Box, Image} from '@chakra-ui/react'\r\nimport Tile from './Tile'\r\n\r\nexport default function Tileset({tiles, direction, hoveredTile}) {\r\n  if (direction === \"vertical\"){\r\n    let spacing = 0\r\n    if (tiles.length > 10){\r\n      spacing = 0.14*tiles.length\r\n    }\r\n    return (\r\n      <VStack spacing={`-${spacing}vh`}>\r\n      {tiles.map((tile) => {\r\n        return (\r\n          <Tile picture={tile.picture} hoveredTile={hoveredTile} />\r\n          )\r\n      })}\r\n      </VStack>\r\n    )\r\n  }else{\r\n    return (\r\n      <HStack spacing='1px'>\r\n      {tiles.map((tile) => {\r\n        return (\r\n          <Tile picture={tile.picture} hoveredTile={hoveredTile} />\r\n          )\r\n      })}\r\n      </HStack>\r\n    )\r\n  }\r\n}\r\n","import {Center, Flex, Text, Image} from \"@chakra-ui/react\"\r\n\r\n\r\nexport default function NameCard({playerID, username, currentPlayer, wind}){\r\n    \r\n    return(\r\n            <Center >\r\n                <Flex h='3vh' textColor='#fafafa' overflow=\"hidden\" bgColor={(currentPlayer===playerID) ? \"#a36453\":\"#55342b\"} px='5px' borderRadius=\"10px\" borderWidth=\"1px\" borderColor='black' borderStyle='solid'>\r\n                    {username}\r\n                    <Image p='2px' borderRadius=\"5px\" src = { wind ? `/images/${wind}.jpg` : null} w='2.3vh' h='2.8vh' />\r\n                </Flex>\r\n            </Center>\r\n    )\r\n}","import {Box, HStack, VStack, Center} from \"@chakra-ui/react\"\r\nimport Tileset from \"./Tileset\"\r\nimport NameCard from './NameCard'\r\n\r\nexport default function OtherPlayer({gameState, gameStateIndex, currentPlayer, playerIndex, hoveredTile}){\r\n\r\n    const hiddenList = (gameStateIndex) => {\r\n        let hiddenTemp = Array.apply(null, Array(gameState[gameStateIndex].handLength)).map(function () {})\r\n        const hidden = hiddenTemp.map(() => {\r\n            return(\r\n                <Box h='2vh' w='3.5vh'  borderRadius=\"5px\" borderWidth='1px' borderColor='black' bg='white' borderStyle='solid' />\r\n            )\r\n        })\r\n        return(hidden)\r\n    }\r\n\r\n    const hiddenListV = (gameStateIndex) => {\r\n        let hiddenTemp = Array.apply(null, Array(gameState[gameStateIndex].handLength)).map(function () {})\r\n        const hidden = hiddenTemp.map(() => {\r\n            return(\r\n                <Box h='3.5vh' w='2vh' borderRadius=\"5px\" borderWidth='1px' borderColor='black' bg='white' borderStyle='solid' />\r\n            )\r\n        })\r\n        return(hidden)\r\n    }\r\n\r\n    if (playerIndex === 1){\r\n        return(\r\n            <Box>\r\n                {gameState[(gameStateIndex+1)%4] &&\r\n                <VStack spacing='10px'>\r\n                    <NameCard playerID={gameState[(gameStateIndex+1)%4].playerID} username={gameState[(gameStateIndex+1)%4].username} currentPlayer={currentPlayer} wind={gameState[(gameStateIndex+1)%4].wind} />\r\n                    <HStack>\r\n                        <Box w='60px'>\r\n                            <Tileset direction=\"vertical\" tiles={gameState[(gameStateIndex+1)%4].revealedTiles.concat(gameState[(gameStateIndex+1)%4].bonusTiles)} hoveredTile={hoveredTile}/>\r\n                        </Box>\r\n                        <Box>\r\n                            <VStack spacing='2px'>\r\n                                {hiddenListV((gameStateIndex+1)%4)}\r\n                            </VStack>\r\n                        </Box>\r\n                    </HStack>\r\n                </VStack>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else if (playerIndex === 2){\r\n        return(\r\n            <Box>\r\n                {gameState[(gameStateIndex+2)%4] &&\r\n                <>\r\n                    <NameCard playerID={gameState[(gameStateIndex+2)%4].playerID} username={gameState[(gameStateIndex+2)%4].username} currentPlayer={currentPlayer} wind={gameState[(gameStateIndex+2)%4].wind} />\r\n                    <Box>\r\n                        <Center>\r\n                            <HStack spacing='2px'>\r\n                                {hiddenList((gameStateIndex+2)%4)}\r\n                            </HStack>\r\n                        </Center>\r\n                        <Center>\r\n                            <Tileset tiles={gameState[(gameStateIndex+2)%4].revealedTiles.concat(gameState[(gameStateIndex+2)%4].bonusTiles)} hoveredTile={hoveredTile}/>\r\n                        </Center>\r\n                    </Box>\r\n                </>\r\n                }\r\n            </Box>\r\n        )\r\n    }else if (playerIndex === 3){\r\n        return(\r\n            <Box>\r\n                {gameState[(gameStateIndex+3)%4] &&\r\n                    <VStack spacing='10px'>\r\n                        <NameCard playerID={gameState[(gameStateIndex+3)%4].playerID} username={gameState[(gameStateIndex+3)%4].username} currentPlayer={currentPlayer} wind={gameState[(gameStateIndex+3)%4].wind} />\r\n                        <HStack>\r\n                            <Box>\r\n                                <VStack spacing='2px'>\r\n                                    {hiddenListV((gameStateIndex+3)%4)}\r\n                                </VStack>\r\n                            </Box>\r\n                            <Box w='60px'>\r\n                                <Tileset direction=\"vertical\" tiles={gameState[(gameStateIndex+3)%4].revealedTiles.concat(gameState[(gameStateIndex+3)%4].bonusTiles)} hoveredTile={hoveredTile}/>\r\n                            </Box>\r\n                        </HStack>\r\n                    </VStack>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n}","import { Wrap } from '@chakra-ui/react'\r\nimport { motion } from 'framer-motion'\r\nimport Tile from './Tile'\r\n\r\nexport default function Discards({discards, hoveredTile, setHoveredTile, handleHover}){\r\n\r\n    const tileList = discards.map((tile) =>{\r\n        return (\r\n            <motion.div onHoverStart={() => handleHover(tile)} onHoverEnd={() => setHoveredTile(null)} whileHover={{scale:1.1}}  >\r\n                <Tile picture={tile.picture} hoveredTile={hoveredTile} />\r\n            </motion.div>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <Wrap spacing='5px' h='50vh' w='50vh' >\r\n                {tileList}\r\n        </Wrap>\r\n    )\r\n}","import React, { useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction useOutsideAlerter(ref,handleSelectTile) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                handleSelectTile(null)\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nexport default function Unselect(props) {\r\n    const wrapperRef = useRef(null);\r\n    useOutsideAlerter(wrapperRef,props.handleSelectTile);\r\n    \r\n    return <div ref={wrapperRef}>{props.children}</div>;\r\n}","import {Box, HStack, Button, Spacer} from '@chakra-ui/react'\r\nimport { compare } from './Mahjong'\r\nimport Tileset from './Tileset'\r\n\r\nexport default function Actions({lastDiscard, sequentialTiles, pongTiles, kongTiles, game, handleChow, handlePong, handleKong, handleGame}){\r\n    \r\n    const chowAction = sequentialTiles.map((e) => {\r\n        return(\r\n            <Box p=\"5px\" bg='#55342b' _hover={{bg:\"#a36453\"}} borderRadius=\"5px\" borderWidth=\"1px\" borderColor=\"#343434\" borderStyle=\"solid\" boxShadow={`3px 4px #000000`}\r\n                onClick={() => {\r\n                console.log(\"Selected chow set\", e)\r\n                handleChow(e.concat(lastDiscard).sort(compare))\r\n                }}>\r\n                <Tileset tiles={e.concat(lastDiscard).sort(compare)} />\r\n            </Box>\r\n        )\r\n    })\r\n\r\n    const pongAction = pongTiles.map((e) => {\r\n        return(\r\n            <Box p=\"5px\" bg='#55342b' _hover={{bg:\"#a36453\"}} borderRadius=\"5px\" borderWidth=\"1px\" borderColor=\"#343434\" borderStyle=\"solid\" boxShadow={`3px 4px #000000`}\r\n                onClick={() => {\r\n                console.log(\"Selected pong set\", e)\r\n                handlePong(e.sort(compare))\r\n                }}>\r\n                <Tileset tiles={e.sort(compare)} />\r\n            </Box>\r\n        )\r\n    })\r\n\r\n    const kongAction = kongTiles.map((e) => {\r\n        //if it's a full kongset with type\r\n            if (e.length > 1){\r\n                let type = e[4]\r\n                e = e.slice(0,4)\r\n                return(\r\n                    <Box p=\"5px\" bg='#55342b' _hover={{bg:\"#a36453\"}} borderRadius=\"5px\" borderWidth=\"1px\" borderColor=\"#343434\" borderStyle=\"solid\" boxShadow={`3px 4px #000000`}\r\n                    onClick={() => {\r\n                    console.log(\"Selected kong set\", e)\r\n                    handleKong(e.sort(compare), type)\r\n                    }}>\r\n                        <Tileset tiles={e.sort(compare)} />\r\n                    </Box>    \r\n                )\r\n            }\r\n    })\r\n\r\n    const gameAction = () => {\r\n        return(\r\n            <Button p=\"5px\" variant='ghost' _hover={{bg:\"rgba(255,255,255,0.2)\"}} bg='rgba(255,255,255,0.1)' borderRadius=\"10px\" p='5px' onClick={handleGame} display={game ? \"block\" : \"none\"} >\r\n                Game\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <HStack h='100px'>\r\n            {(sequentialTiles.length > 0) ? chowAction : null}\r\n            {(pongTiles.length > 0) ? pongAction : null}\r\n            {(kongTiles.length > 0) ? kongAction : null}\r\n            {game ? gameAction() : null}\r\n        </HStack>\r\n    )\r\n}","import {Box, HStack, Center, Spacer, Button, VStack, Image} from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\nimport Tileset from './Tileset'\r\nimport OtherPlayer from './OtherPlayer'\r\nimport Discards from './Discards'\r\nimport Unselect from './Unselect'\r\nimport Tile from './Tile'\r\nimport { motion } from \"framer-motion\"\r\nimport Actions from './Actions'\r\n\r\nexport default function Board({clientID, tiles, newTile, handleSelectTile,currentTurn, currentPlayer, gameState, discards, selectedTile, handleDiscard, lastDiscard, pongTiles, handlePong, sequentialTiles, handleChow, kongTiles, handleKong, game, handleGame}){\r\n    const [hoveredTile, setHoveredTile] = useState()\r\n    let gameStateIndex = gameState.findIndex(e => e.playerID === clientID)\r\n    \r\n    const tileVariants = {\r\n        selected: {y:-15},\r\n        unselected: {y:0}\r\n    }\r\n\r\n    const handleClickTile = (tile) => {\r\n        if (selectedTile === tile && currentTurn){\r\n            handleDiscard()\r\n        }else{\r\n            handleSelectTile(tile)\r\n        }\r\n    }\r\n\r\n    const handleHover = (tile) => {\r\n        setHoveredTile(tile)\r\n    }\r\n\r\n    //Render tiles\r\n    const tileList = tiles.map((tile, idx) =>{\r\n        var color = \"#343434\"\r\n        if (tile === newTile && currentTurn){\r\n            color = \"#ff4a4a\"\r\n        }\r\n\r\n        return (\r\n                <motion.div onHoverStart={() => handleHover(tile)} onHoverEnd={() => setHoveredTile(null)} whileHover={{scale:1.1}} variants={tileVariants} animate={(selectedTile === tile) ? 'selected':'unselected'} >\r\n                    <Box key={idx} value = {tile} onClick={() => handleClickTile(tile)} >\r\n                        <Tile picture={tile.picture} color={color} />\r\n                    </Box>\r\n                </motion.div>\r\n        )\r\n\r\n    })\r\n\r\n\r\n    return(\r\n        <>\r\n        <VStack h='95vh' w='95vh' m='auto' mt='2vh' bgColor=\"#006442\" borderWidth='5px' borderColor='#55342b'  borderStyle='solid'>\r\n            { gameState[(gameStateIndex+2)%4]? <OtherPlayer gameState={gameState} gameStateIndex={gameStateIndex} currentPlayer={currentPlayer} playerIndex={2} hoveredTile={hoveredTile}/> : <Spacer /> }\r\n            <Spacer />\r\n            <HStack w='100%'>\r\n                { gameState[(gameStateIndex+3)%4]? <OtherPlayer gameState={gameState} gameStateIndex={gameStateIndex} currentPlayer={currentPlayer} playerIndex={3} hoveredTile={hoveredTile}/> : <Spacer /> }\r\n                <Spacer />\r\n                <Discards discards={discards} hoveredTile={hoveredTile} setHoveredTile={setHoveredTile} handleHover={handleHover} />\r\n                <Spacer />\r\n                { gameState[(gameStateIndex+1)%4]? <OtherPlayer gameState={gameState} gameStateIndex={gameStateIndex} currentPlayer={currentPlayer} playerIndex={1} hoveredTile={hoveredTile}/> : <Spacer /> }\r\n            </HStack>\r\n            <Spacer />\r\n            {(sequentialTiles.length === 0 && pongTiles.length === 0 && kongTiles.reduce((count, row) => count + row.length, 0) <= 1 && !game) ? <Box h='100px' /> : <Actions lastDiscard={lastDiscard} sequentialTiles={sequentialTiles} pongTiles={pongTiles} kongTiles={kongTiles} game={game} handleChow={handleChow} handlePong={handlePong} handleKong={handleKong} handleGame={handleGame} /> }\r\n            { gameState[gameStateIndex] &&\r\n            <Box position='relative' zIndex={2}>\r\n                <Box w='100%' m='auto'>\r\n                    <Center mb='5px'>\r\n                        <Tileset tiles={gameState[gameStateIndex].revealedTiles.concat(gameState[gameStateIndex].bonusTiles)} />\r\n                    </Center>\r\n                </Box>\r\n                <Center w='100%' m='auto' mb='5px'>\r\n                    <Unselect handleSelectTile={handleSelectTile}>\r\n                        <HStack spacing=\"1px\">\r\n                            {tileList}\r\n                        </HStack>\r\n                    </Unselect>\r\n                </Center>\r\n            </Box>\r\n            }\r\n        </VStack>\r\n        </>\r\n    )\r\n}","import {Button, Box, Center, Table, Thead, Tbody, Th, Tr, Td, Modal, ModalOverlay, ModalContent, ModalHeader, useDisclosure, ModalBody, ModalFooter, ModalCloseButton} from '@chakra-ui/react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport default function Summary({username, roundEnd, summary, handleNewGame, draw, isOpen, onOpen, onClose}) {  \r\n    const [newGame, setNewGame] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        if (roundEnd){\r\n        onOpen()\r\n        setTimeout(() => {\r\n            setNewGame(false)}\r\n            ,3000)\r\n        }\r\n    },[roundEnd])\r\n\r\n    const nameDict = {\r\n        animalPoints: \"Animal Tiles\",\r\n        dragonPoints: \"Dragon Set\",\r\n        windPoints: \"Seat Flower\",\r\n        tableWindPoints: \"Prevailing Wind Set\",\r\n        yourWindPoints: \"Seat Wind Set\",\r\n        totalPoints: \"Total tai\",\r\n        allPong: \"All Pong\",\r\n        臭平和: \"All Chow\",\r\n        平和: \"Ping Wu\",\r\n        清一色: \"Full Color\",\r\n        混一色: \"Half Color\",\r\n        oneNine: \"All Terminals\",\r\n        halfOneNine: \"Terminals and Honors\",\r\n        七对子: \"7 Pairs\",\r\n        十三幺: \"13 Wonders\"\r\n    }\r\n\r\n    //when the game ends\r\n    if (roundEnd){\r\n        let summary_filtered = []\r\n        //filter out to only those with points\r\n        summary = Object.keys(summary).forEach(key => {\r\n            //if value (point) is greater than 0\r\n            if (summary[key] > 0){\r\n                summary_filtered = summary_filtered.concat({\r\n                                        name: nameDict[key],\r\n                                        points: summary[key]\r\n                                    })\r\n            }\r\n        })\r\n\r\n        const table = summary_filtered.map(e => {\r\n            return (\r\n                <Tr>\r\n                    <Td>{e.name}</Td>\r\n                    <Td isNumeric>{e.points}</Td>\r\n                </Tr>\r\n            )\r\n        })\r\n\r\n        console.log(\"Summary filtered\", summary_filtered)\r\n        \r\n        if (!draw){\r\n            return (\r\n                <>\r\n                    <Modal isOpen={isOpen} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent>\r\n                        <ModalHeader h='10px'>\r\n                            <Center>\r\n                                {username.username} wins!\r\n                            </Center>\r\n                        </ModalHeader>\r\n                        <ModalCloseButton />\r\n                        <ModalBody >\r\n                            <Table variant=\"striped\" size='sm'>\r\n                                <Thead>\r\n                                    <Tr>\r\n                                        <Th>Name</Th>\r\n                                        <Th isNumeric>Double</Th>\r\n                                    </Tr>\r\n                                </Thead>\r\n                                <Tbody>\r\n                                    {table}\r\n                                </Tbody>\r\n                            </Table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button size='sm' isDisabled={newGame} onClick={handleNewGame} >New game</Button>\r\n                        </ModalFooter>\r\n                    </ModalContent>\r\n                    </Modal>\r\n                </>\r\n            )\r\n        }else{\r\n            return(\r\n                <Modal isOpen={isOpen} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent>\r\n                        <ModalHeader>Draw</ModalHeader>\r\n                        <ModalCloseButton />\r\n                        <ModalFooter>\r\n                            <Button isDisabled={newGame} onClick={handleNewGame} >New game</Button>\r\n                        </ModalFooter>\r\n                    </ModalContent>\r\n                    </Modal>\r\n            )\r\n        }\r\n    }\r\n\r\n    return null\r\n}","import { Collapse, Box, Flex, Spacer, HStack, Image, Text, useDisclosure } from \"@chakra-ui/react\"\r\nimport Tile from \"./Tile\"\r\n\r\nexport default function ScoreInfo({name, score, info, pictures}) {\r\n    const { isOpen, onToggle } = useDisclosure()\r\n\r\n    const combination = pictures.map((picture) => {\r\n        if (picture === \"\"){\r\n            return(\r\n                <Box w='10px' />\r\n            )\r\n        }else{\r\n            return(\r\n                <Image src={\"/images/\" + picture + \".jpg\"}  h=\"26px\" borderRadius=\"5px\" borderWidth=\"1px\" borderColor=\"#343434\" borderStyle=\"solid\" boxShadow={`1.2px 2px #000000`} />\r\n            )\r\n        }\r\n    })\r\n\r\n    return(\r\n        <Box>\r\n            <Flex>\r\n                <Box _hover={{\"text-decoration\": \"underline\"}} onClick={onToggle}>{name}</Box>\r\n                <Spacer />\r\n                {score}\r\n            </Flex>\r\n            <Collapse in={isOpen}>\r\n                {info.split(\".\").map((sentence) => {\r\n                    return(\r\n                        <Text align='left' justifyContent fontSize={12}>\r\n                            {sentence}\r\n                        </Text>\r\n                    )\r\n                    })}\r\n                <HStack spacing='0px'>\r\n                    {combination}\r\n                </HStack>\r\n            </Collapse>\r\n        </Box>\r\n    )\r\n}","import {Tabs, TabList, TabPanels, Tab, TabPanel, useClipboard, Input, InputGroup, InputRightElement, Text, VStack, Spacer, Button, ButtonGroup, Image, Heading, Flex, Box} from '@chakra-ui/react'\r\nimport { CopyIcon, CheckIcon } from \"@chakra-ui/icons\"\r\nimport NameCard from './NameCard'\r\nimport ScoreInfo from './ScoreInfo'\r\n\r\nexport default function Information({tableWind,yourWind, playerID, currentPlayer, gameState, handleNewGame, roundEnd, onOpen}){\r\n    //Invite link\r\n    const {hasCopied, onCopy} = useClipboard(window.location.href)\r\n    \r\n    const score = gameState.map((player) => {\r\n        return(\r\n            <Flex w='100%' >\r\n                {player.username}\r\n                <Spacer />\r\n                {player.score}\r\n            </Flex>\r\n        )\r\n    })\r\n    const flowerIndex = {\r\n        \"~east\": 1,\r\n        \"~south\": 2,\r\n        \"~west\": 3,\r\n        \"~north\": 4\r\n    }\r\n    const scoreList = [\r\n        {\r\n            name: \"Prevailing wind set\",\r\n            score: 1,\r\n            info: \"Pong or kong of prevailing wind\",\r\n            pictures: tableWind ? [tableWind,tableWind,tableWind] : [\"~east\",\"~east\",\"~east\"]\r\n        },\r\n        {\r\n            name: \"Seat wind set\",\r\n            score: 1,\r\n            info: \"Pong or kong of seat wind\",\r\n            pictures: yourWind ? [yourWind,yourWind,yourWind] : [\"~east\",\"~east\",\"~east\"]\r\n        },\r\n        {\r\n            name: \"Dragon tiles set\",\r\n            score: 1,\r\n            info: \"Pong or kong of any dragon tiles\",\r\n            pictures: [\"~red\",\"~red\",\"~red\"]\r\n        },\r\n        {\r\n            name: \"All Chow\",\r\n            score: 1,\r\n            info: \"Four sets of sequentials with an eye. Eye must not be prevailing or seat wind or dragon tile. Unless self-drawn, must have a two-sided wait\",\r\n            pictures: [\"bamboo1\",\"bamboo2\",\"bamboo3\",\"circles1\",\"circles2\",\"circles3\",\"numbers5\",\"numbers5\"]\r\n        },\r\n        {\r\n            name: \"Seat flower\",\r\n            score: 1,\r\n            info: \"Flower corresponding to your seat position\",\r\n            pictures: yourWind ? [\"flowers\"+flowerIndex[yourWind],\"flowers\"+(flowerIndex[yourWind]+4)] : [\"flowers1\",\"flowers5\"]\r\n        },\r\n        {\r\n            name: \"Animal tile\",\r\n            score: 1,\r\n            info: \"Any animal tile\",\r\n            pictures: [\"cat\",\"mouse\",\"rooster\",\"centipede\"]\r\n        },\r\n        {\r\n            name: \"All Pong\",\r\n            score: 2,\r\n            info: \"Four sets of pong or kong with an eye\",\r\n            pictures: [\"bamboo2\",\"bamboo2\",\"bamboo2\",\"numbers6\",\"numbers6\",\"numbers6\",\"~white\",\"~white\"]\r\n        },\r\n        {\r\n            name: \"Mixed suit\",\r\n            score: 2,\r\n            info: \"Mahjong with one suit and honors\",\r\n            pictures: [\"~east\",\"~east\",\"~east\",\"bamboo9\",\"bamboo9\",\"bamboo9\",\"~red\",\"~red\"]\r\n        },\r\n        {\r\n            name: \"Terminals and Honors\",\r\n            score: 2,\r\n            info: \"Mahjong with 1s, 9s, and honors\",\r\n            pictures: [\"circles1\",\"circles1\",\"circles1\",\"numbers9\",\"numbers9\",\"numbers9\",\"~north\",\"~north\"]\r\n        },\r\n        {\r\n            name: \"7 Pairs\",\r\n            score: 3,\r\n            info: \"7 eyes\",\r\n            pictures: [\"~east\",\"~east\",\"~west\",\"~west\",\"~green\",\"~green\",\"circles5\",\"circles5\"]\r\n        },\r\n        {\r\n            name: \"Ping Wu\",\r\n            score: 4,\r\n            info: \"All chow without flower or animal tiles\",\r\n            pictures: [\"bamboo4\",\"bamboo5\",\"bamboo6\",\"circles4\",\"circles5\",\"circles6\",\"numbers7\",\"numbers7\"]\r\n        },\r\n        {\r\n            name: \"Full Color\",\r\n            score: 4,\r\n            info: \"Mahjong with only one suit\",\r\n            pictures: [\"numbers1\",\"numbers2\",\"numbers3\",\"numbers8\",\"numbers8\",\"numbers8\",\"numbers9\",\"numbers9\"]\r\n        },\r\n        {\r\n            name: \"13 Wonders\",\r\n            score: 5,\r\n            info: \"Each terminal and honors. Any eye\",\r\n            pictures: [\"bamboo1\",\"bamboo9\",\"~east\",\"~south\",\"~west\",\"~north\",\"~red\",\"~red\"]\r\n        },\r\n        {\r\n            name: \"All Terminals\",\r\n            score: 5,\r\n            info: \"Mahjong with only 1s and 9s\",\r\n            pictures: [\"numbers1\",\"numbers1\",\"numbers1\",\"circles1\",\"circles1\",\"circles1\",\"bamboo9\",\"bamboo9\"]\r\n        },\r\n    ]\r\n\r\n    const scoreTable = scoreList.map((e) => {\r\n        return(\r\n            <ScoreInfo name={e.name} score={e.score} info={e.info} pictures={e.pictures} />\r\n        )\r\n    })\r\n\r\n    const pettyList = [\r\n        {\r\n            name: \"Predator Prey\",\r\n            score: 1,\r\n            info: \"Cat-mouse rooster-centipede pair\",\r\n            pictures: [\"cat\",\"mouse\",\"\",\"rooster\",\"centipede\"]\r\n        },\r\n        {\r\n            name: \"Flower Pair\",\r\n            score: 1,\r\n            info: \"Own an opponent flower pair\",\r\n            pictures: [\"flowers\"+((flowerIndex[yourWind]+1)%8),\"flowers\"+((flowerIndex[yourWind]+5)%8)]\r\n        },\r\n        {\r\n            name: \"Concealed Kong\",\r\n            score: 2,\r\n            info: \"Perform a one/three tiles concealed kong\",\r\n            pictures: ['bamboo8','bamboo8','bamboo8','bamboo8']\r\n        },\r\n        {\r\n            name: \"Flowers Set (u/c)\",\r\n            score: 4,\r\n            info: \"Own all red or black flowers\",\r\n            pictures: [\"flowers1\",\"flowers2\",\"flowers3\",\"flowers4\",\"flowers5\",\"flowers6\",\"flowers7\",\"flowers8\"]\r\n        },\r\n        {\r\n            name: \"Animals Set (u/c)\",\r\n            score: 4,\r\n            info: \"Own all animal tiles\",\r\n            pictures: [\"cat\",\"mouse\",\"rooster\",\"centipede\"]\r\n        },\r\n    ]\r\n\r\n    const pettyTable = pettyList.map((e) => {\r\n        return(\r\n            <ScoreInfo name={e.name} score={e.score} info={e.info} pictures={e.pictures} />\r\n        )\r\n    })\r\n\r\n    let username\r\n    if (gameState.find(e => e.playerID === playerID)){\r\n        username = gameState.find(e => e.playerID === playerID).username\r\n        console.log(\"USERNAME: \", username)\r\n    }\r\n\r\n    return(\r\n        <Tabs mr='10px' align='center' variant='enclosed' isFitted>\r\n            <TabList>\r\n                <Tab>Table</Tab>\r\n                <Tab>Scoring</Tab>\r\n            </TabList>\r\n\r\n            <TabPanels >\r\n                <TabPanel w='200px'>\r\n                    <VStack spacing='25px'>\r\n                        <Box mt='5px'>\r\n                            <NameCard playerID={playerID} username={username} currentPlayer={currentPlayer} wind={yourWind}/>\r\n                            <Flex w='190px'>Prevailing Wind <Spacer /> <Image src={ \"/images/\" + tableWind + \".jpg\"} fallbackSrc=\"/images/blank.jpg\" h='30px' borderRadius=\"5px\" /> </Flex>\r\n                        </Box>\r\n                        <Box>\r\n                            <Heading fontSize={20} mb='5px'>Leaderboard</Heading>\r\n                            <Box w='190px'>\r\n                                {score}\r\n                            </Box>\r\n                        </Box>\r\n                        <Flex>\r\n                            <ButtonGroup isAttached size='sm' variant='outline'>\r\n                                <Button disabled={!roundEnd} onClick={onOpen}>Summary</Button>\r\n                                <Button disabled={!roundEnd} onClick={handleNewGame}>New game</Button>\r\n                            </ButtonGroup>\r\n                        </Flex>\r\n                        <Box>\r\n                            <Text textAlign='left' p='0px' m='0px'>Invite link</Text>\r\n                            <InputGroup>\r\n                                <Input h='30px' px='2px' variant='filled' value={hasCopied ? \"Copied!\" : window.location.href}  isReadOnly />\r\n                                <InputRightElement h='30px'>\r\n                                    <Button h='30px' onClick={onCopy} variant='outline'> {hasCopied? <CheckIcon h='20px' /> : <CopyIcon h='20px' />} </Button>\r\n                                </InputRightElement>\r\n                            </InputGroup>\r\n                        </Box>\r\n                    </VStack>\r\n\r\n                </TabPanel>\r\n                <TabPanel w='200px'>\r\n                    <Flex w='100%' >\r\n                        <strong>Name</strong>\r\n                        <Spacer />\r\n                        <strong>Double</strong>\r\n                    </Flex>\r\n                    {scoreTable}\r\n                    <Flex w='100%' mt='10px' >\r\n                        <strong>Instant Payout</strong>\r\n                        <Spacer />\r\n                        <strong>Points</strong>\r\n                    </Flex>\r\n                    {pettyTable}\r\n                </TabPanel>\r\n            </TabPanels>\r\n        </Tabs>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nimport {Flex, Spacer, FormControl, Button, Input, Modal, ModalOverlay, ModalHeader,ModalBody, ModalContent, useDisclosure} from \"@chakra-ui/react\"\r\n\r\nexport default function Username({sendMessage}) {\r\n    const {isOpen, onOpen, onClose } = useDisclosure({defaultIsOpen:true})\r\n    const [username, setUsername] = useState('')\r\n\r\n    const onUsernameChange = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    //Set Username\r\n    const submitUsername = () => {\r\n        onClose()\r\n        sendMessage(\"Username: \"+username)\r\n    }\r\n    \r\n    return(\r\n        <Modal isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Username</ModalHeader>\r\n                <FormControl px='20px'>\r\n                    <Input onKeyPress={(e) => { (e.key===\"Enter\") ? submitUsername() : console.log() }} onChange={onUsernameChange} value={username} placeholder=\"Username\" />\r\n                    <Flex>\r\n                        <Spacer />\r\n                        <Button my='10px' onClick={submitUsername} type='submit'>Submit</Button>\r\n                    </Flex>\r\n                </FormControl>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\r\nimport {Flex, Box, useDisclosure} from '@chakra-ui/react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { checkGame, compare, getChow } from './Mahjong';\r\nimport Board from './Board'\r\nimport Summary from './Summary';\r\nimport Information from './Information';\r\nimport Username from './Username';\r\n\r\nexport default function Table() {\r\n  let sequentialTiles_top, sequentialTiles_mid, sequentialTiles_bot\r\n  const gameId = useParams().gameId\r\n  //socket stuff\r\n  const [socketUrl, setSocketUrl] = useState(`wss://mahjong.irscybersec.tk/api/${gameId}`); //`ws://localhost:3001/${gameId}` || \r\n  const [messageHistory, setMessageHistory] = useState([]);\r\n  //set users\r\n  const [onlineUsers, setOnlineUsers] = useState([])\r\n  const [clientID, setClientID] = useState([])\r\n  const [winnerID, setWinnerID] = useState()\r\n  const [currentPlayer, setCurrentPlayer] = useState()\r\n  const [previousPlayer, setPreviousPlayer] = useState(null)\r\n  //set tiles\r\n  const [tiles, setTiles] = useState([])\r\n  const [newTile, setNewTile] = useState()\r\n  const [bonusTiles, setBonusTiles] = useState([])\r\n  const [revealedTiles, setRevealedTiles] = useState([])\r\n  //set winds\r\n  const [yourWind, setYourWind] = useState('')\r\n  const [tableWind, setTableWind] = useState('')\r\n  //discard pile\r\n  const [discards, setDiscards] = useState([])\r\n  const [lastDiscard, setLastDiscard] = useState()\r\n  //moves\r\n  const [sequentialTiles, setSequentialTiles] = useState([])\r\n  const [pongTiles, setPongTiles] = useState([])\r\n  const [kongTiles, setKongTiles] = useState([])\r\n  const [game, setGame] = useState(false)\r\n  const [summary, setSummary] = useState()\r\n  //others\r\n  const [currentTurn, setCurrentTurn] = useState(false) //whether it is your turn\r\n  const { isOpen: isOpenSummary, onOpen: onOpenSummary, onClose: onCloseSummary } = useDisclosure() //for Summary\r\n  const [draw, setDraw] = useState(false)\r\n  const [roundEnd, setRoundEnd] = useState(false)\r\n  const [minimumPoints, setMinimumPoints] = useState(1)\r\n  const [delay, setDelay] = useState(3000) //set turn timer\r\n  const [gameState, setGameState] = useState([]) \r\n  /* [  socket: Websocket,\r\n        playerID: playerID,\r\n        handLength: number of tiles,\r\n        bonusTiles: bonus tiles,\r\n        revealedTile\": revealed tiles }] */\r\n\r\n  //select tiles\r\n  const [selectedTile, setSelectedTile] = useState(null)\r\n  const handleSelectTile = (tile) => {\r\n    console.log(tile)\r\n    setSelectedTile(tile)\r\n  }\r\n\r\n  //discarding tiles\r\n  const handleDiscard = () => {\r\n    if (!roundEnd){\r\n      game ? setGame(false) : setGame(false) //if self-drawn, set game back to false\r\n      console.log(\"Discarding \", selectedTile)\r\n      sendMessage('Discard: ' + JSON.stringify(selectedTile))\r\n      //filter out the discarded tile from our hand\r\n      let newTiles = tiles.filter(e => !((e.suit===selectedTile.suit) && (e.value===selectedTile.value) && (e.id===selectedTile.id)) )\r\n\r\n      setTiles(newTiles)\r\n      setSelectedTile(null)\r\n      //empty kong tiles if I'm not using it\r\n      setKongTiles([])\r\n      setCurrentTurn(false)\r\n    }\r\n  }\r\n\r\n  //function for checking for immediate payouts\r\n  const checkPetty = (bonuses) => {\r\n    //check within the new bonus tiles\r\n    //predator prey\r\n    if (bonuses.filter(e => (e.suit === \"cat\") || (e.suit === \"mouse\")).length === 2){\r\n      console.log(\"CAT MOUSE PAIR\")\r\n      sendMessage(\"AnimalPair\")\r\n    } else if (bonuses.filter(e => (e.suit === \"rooster\") || (e.suit === \"centipede\")).length === 2){\r\n      console.log(\"ROOSTER CENTIPEDE PAIR\")\r\n      sendMessage(\"AnimalPair\")\r\n    }\r\n\r\n    if (bonuses.filter(e => (e.value === 1)).length === 2){\r\n      console.log(\"FlowerPair 1\")\r\n      sendMessage(\"FlowerPair ~east\")\r\n    } else if (bonuses.filter(e => (e.value === 2)).length === 2){\r\n      console.log(\"2 FLOWER PAIR\")\r\n      sendMessage(\"FlowerPair ~south\")\r\n    } else if (bonuses.filter(e => (e.value === 3)).length === 2){\r\n      console.log(\"3 FLOWER PAIR\")\r\n      sendMessage(\"FlowerPair ~west\")\r\n    } else if (bonuses.filter(e => (e.value === 4)).length === 2){\r\n      console.log(\"4 FLOWER PAIR\")\r\n      sendMessage(\"FlowerPair ~north\")\r\n    }\r\n\r\n    //flowers\r\n    //for each bonus\r\n    bonuses.forEach(bonus => {\r\n      //check for predator prey\r\n      if ((bonus.suit === \"mouse\" && bonusTiles.filter(e => e.suit === \"cat\").length > 0) || (bonus.suit === \"cat\" && bonusTiles.filter(e => e.suit === \"mouse\").length > 0) ){\r\n        console.log(\"CAT MOUSE PAIR\")\r\n        sendMessage(\"AnimalPair\")\r\n      }else if ((bonus.suit === \"rooster\" && bonusTiles.filter(e => e.suit === \"centipede\").length > 0) || (bonus.suit === \"centipede\" && bonusTiles.filter(e => e.suit === \"rooster\").length > 0) ){\r\n        console.log(\"ROOSTER CENTIPEDE PAIR\")\r\n        sendMessage(\"AnimalPair\")\r\n      }\r\n\r\n      //check for flower pair\r\n      if (bonusTiles.filter(e => e.value === bonus.value).length === 1){\r\n        console.log(`${bonus.value} FLOWER PAIR`)\r\n      }\r\n    })\r\n  }\r\n\r\n  const lookup = tiles.reduce((a, e) => {\r\n    a[`${e.suit} ${e.value}`] = ++a[`${e.suit} ${e.value}`] || 0;\r\n    return a;\r\n  }, {});\r\n\r\n  const checkKong = (newTile) => {\r\n    //check kong within hand\r\n    let four_concealed = tiles.filter(e => (e.suit === newTile.suit) && (e.value === newTile.value)).concat(newTile)\r\n    let kongSets = tiles.filter(e => lookup[`${e.suit} ${e.value}`] == 3)\r\n\r\n    if (four_concealed.length == 4){\r\n      setKongTiles([four_concealed.concat(\"four\")])\r\n      console.log(\"Four concealed kong\", four_concealed)\r\n    }else if(kongSets){\r\n      setKongTiles([kongSets.concat(\"four\")])\r\n      console.log(\"kongSets\", kongSets)\r\n    }\r\n\r\n    //check kong in exposed\r\n    let gameStateIndex = gameState.findIndex(e => e.playerID === clientID)\r\n    let exposed = gameState[gameStateIndex].revealedTiles\r\n    let one_concealed = exposed.filter(e => (e.suit === newTile.suit) && (e.value === newTile.value)).concat(newTile)\r\n    if (one_concealed.length == 4){\r\n      setKongTiles([one_concealed.concat(\"four\")])\r\n      console.log(\"One concealed kong\",one_concealed)\r\n    }\r\n  }\r\n\r\n  //functions for making moves (chow, pong, kong, game)\r\n  const checkValidMoves = (lastDiscard) => {\r\n    //if there was a last discard and last discarder is not the player\r\n    if (lastDiscard && clientID !== previousPlayer){\r\n      //check for winning hand\r\n      let [game_temp, summary_temp] = checkGame(tiles,revealedTiles,bonusTiles,tableWind,yourWind, lastDiscard, [])\r\n      setSummary(summary_temp)\r\n      console.log(\"Summary: \",summary_temp)\r\n      //if the discarded tile builds a winning hand and has more than minimum points\r\n      if (game_temp && summary_temp.totalpoints >= minimumPoints) {\r\n        setGame(game_temp)\r\n        setTimeout(() => {\r\n          setGame(false)\r\n        },delay)\r\n      }\r\n      //check for pong\r\n      let sameTiles = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value)).concat(lastDiscard)\r\n      console.log(\"Same tiles: \", sameTiles)\r\n      if (sameTiles.length == 3) {\r\n        setPongTiles([sameTiles])\r\n        setTimeout(() => {\r\n          setPongTiles([])\r\n        },delay)\r\n      }else if (sameTiles.length == 4){\r\n        setKongTiles([sameTiles.concat(\"three\")])\r\n        setTimeout(() => {\r\n          setKongTiles([])\r\n        },delay)\r\n      }\r\n\r\n      //check if last discard is from the guy before you\r\n      if (gameState.at(gameState.findIndex(e => e.playerID===clientID) - 1).playerID === previousPlayer){\r\n        //check for chow\r\n        sequentialTiles_top = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value-1 || e.value === lastDiscard.value-2 ) )\r\n        sequentialTiles_mid = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value-1 || e.value === lastDiscard.value+1 ) )\r\n        sequentialTiles_bot = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value+1 || e.value === lastDiscard.value+2 ) )\r\n        //check for unique chow values\r\n        sequentialTiles_top = getChow(sequentialTiles_top)\r\n        sequentialTiles_mid = getChow(sequentialTiles_mid)\r\n        sequentialTiles_bot = getChow(sequentialTiles_bot)\r\n        //check for multiple chows\r\n        let sequentialTiles_temp = [sequentialTiles_top,sequentialTiles_mid,sequentialTiles_bot].filter(e => e.length===2)\r\n\r\n        if (sequentialTiles_temp.length > 0){\r\n          setSequentialTiles(sequentialTiles_temp)\r\n          setTimeout(() => {\r\n            setSequentialTiles([])\r\n          },delay)\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  const handlePong = (pongSet) => {\r\n    console.log(\"PONG!\", pongTiles)\r\n    setPongTiles([])\r\n    sendMessage(clientID + \" pong \" + JSON.stringify(pongSet))\r\n  }\r\n\r\n  const handleKong = (kongSet, type) => {\r\n    console.log(\"KONG!\", kongSet, type)\r\n    setKongTiles([])\r\n    if (type === \"three\"){\r\n      sendMessage(clientID + \" threekong \" + JSON.stringify(kongSet))\r\n    }else if (type===\"four\"){\r\n      sendMessage(clientID + \" fourkong \" + JSON.stringify(kongSet))\r\n    }else if (type===\"one\"){\r\n      sendMessage(clientID + \" onekong \" + JSON.stringify(kongSet))\r\n    }\r\n  }\r\n\r\n  const handleChow = (chowSet) => {\r\n    console.log(\"CHOW!\", sequentialTiles)\r\n    setSequentialTiles([])\r\n    sendMessage(clientID + \" chow \" + JSON.stringify(chowSet))\r\n  }\r\n\r\n  const handleGame = () => {\r\n    sendMessage(clientID + \" WINS! \"+JSON.stringify(summary)+\" \"+JSON.stringify(tiles))\r\n    setGame(false)\r\n    setTiles([])\r\n  }\r\n\r\n  const handleNewGame = () => {\r\n    sendMessage(\"New game!\")\r\n  }\r\n\r\n  const {\r\n    sendMessage,\r\n    lastMessage,\r\n    readyState,\r\n  } = useWebSocket(socketUrl);\r\n\r\n  const connectionStatus = {\r\n    [ReadyState.CONNECTING]: 'Connecting',\r\n    [ReadyState.OPEN]: 'Connected',\r\n    [ReadyState.CLOSING]: 'Closing',\r\n    [ReadyState.CLOSED]: 'Closed',\r\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\r\n  }[readyState];\r\n  \r\n  useEffect(() => {\r\n    if (lastMessage !== null) {\r\n      console.log(\"Last message: \",lastMessage.data)\r\n      setMessageHistory(prev => prev.concat(lastMessage));\r\n      if (lastMessage.data.includes(\"Online users:\")) {\r\n        let userList = lastMessage.data.replace(\"Online users: \",\"\")\r\n        setOnlineUsers(userList)\r\n      }else if (lastMessage.data.includes(\"Game state\")) {\r\n        let gameState_temp = lastMessage.data.replace(\"Game state: \",\"\")\r\n        console.log(\"Game state: \", gameState_temp)\r\n        setGameState(JSON.parse(gameState_temp))\r\n      }else if (lastMessage.data.includes(\"Your ID\")) {\r\n        let clientID_temp = lastMessage.data.replace(\"Your ID: \",\"\")\r\n        setClientID(clientID_temp)\r\n      } else if (lastMessage.data.includes(\"Tiles\")) {\r\n        let tiles_temp = JSON.parse(lastMessage.data.replace(\"Tiles: \",\"\"))\r\n        if (tiles_temp.length === 13){\r\n          setTiles(tiles_temp.sort(compare)) //new hand\r\n        }else{\r\n          setTiles(prev => prev.concat(tiles_temp).sort(compare)) //new tile\r\n        }\r\n        setNewTile(tiles_temp)\r\n        console.log(\"New tiles:\", tiles_temp)\r\n        //if a new tile is drawn, check if 自摸 or concealed kong\r\n        if (tiles_temp.length !== 13){\r\n          console.log(\"Tiles:\",tiles)\r\n          let [game_temp, summary_temp] = checkGame(tiles,revealedTiles,bonusTiles,tableWind,yourWind,[], tiles_temp)\r\n          checkKong(tiles_temp)\r\n          setGame(game_temp)\r\n          setSummary(summary_temp)\r\n        }\r\n      } else if (lastMessage.data.includes(\"Bonus\")) {\r\n        let bonusTiles_temp = JSON.parse(lastMessage.data.replace(\"Bonus: \",\"\"))\r\n        checkPetty(bonusTiles_temp)\r\n        setBonusTiles(prev => prev.concat(bonusTiles_temp))\r\n      }else if (lastMessage.data.includes(\"Table wind\")) {\r\n        setTableWind(lastMessage.data.replace(\"Table wind: \",\"\"))\r\n      }else if (lastMessage.data.includes(\"Your wind\")) {\r\n        setYourWind(lastMessage.data.replace(\"Your wind: \",\"\"))\r\n      }else if (lastMessage.data.includes(\"It is your turn\")) {\r\n        setCurrentTurn(true)\r\n      }else if (lastMessage.data.includes(\"Discards\")) {\r\n        let discards_temp = JSON.parse(lastMessage.data.replace(\"Discards: \", \"\"))\r\n        setDiscards(discards_temp)\r\n        setLastDiscard(discards_temp.at(-1))\r\n        console.log(\"Last discarded\", discards_temp.at(-1))\r\n        checkValidMoves(discards_temp.at(-1))\r\n      }else if (lastMessage.data.includes(\"Previous player: \")) {\r\n        setPreviousPlayer(lastMessage.data.replace(\"Previous player: \",\"\"))\r\n      }else if (lastMessage.data.includes(\"Revealed\")) {\r\n        //sucessfull move made\r\n        let revealedTiles_temp = JSON.parse(lastMessage.data.replace(\"Revealed: \",\"\"))\r\n        let newTiles = tiles\r\n        console.log(\"New Tiles: \", newTiles)\r\n        //remove from our hand\r\n        for (let i=0; i<revealedTiles_temp.length; i++){\r\n          console.log(\"Target: \",revealedTiles_temp[i])\r\n          console.log(\"Target Index: \", newTiles.indexOf(revealedTiles_temp[i]))\r\n          newTiles = newTiles.filter((tile) => !((tile.suit === revealedTiles_temp[i].suit) && (tile.value === revealedTiles_temp[i].value)))\r\n        }\r\n        setTiles(newTiles)\r\n        setRevealedTiles(prev => prev.concat(revealedTiles_temp).sort(compare))\r\n      }else if (lastMessage.data.includes(\"Current player: \")){\r\n        let currentPlayer_temp = lastMessage.data.replace(\"Current player: \",\"\")\r\n        setCurrentPlayer(currentPlayer_temp.substring(1, currentPlayer_temp.length-1))\r\n      }else if (lastMessage.data.includes(\"New game!\")) {\r\n        setRoundEnd(false)\r\n        setDraw(false)\r\n        setDiscards([])\r\n        setLastDiscard()\r\n        setBonusTiles([])\r\n        setRevealedTiles([])\r\n        setSelectedTile()\r\n        setSummary()\r\n      }else if (lastMessage.data.includes(\"wins\")) {\r\n        sendMessage(\"ShowAll: \" + JSON.stringify(tiles))\r\n        setTiles([])\r\n        setRoundEnd(true)\r\n        let summary_temp = JSON.parse(lastMessage.data.split(\" \")[2])\r\n        setSummary(summary_temp)\r\n        setWinnerID(lastMessage.data.split(\" \")[0])\r\n      }else if (lastMessage.data.includes(\"Draw:\")) {\r\n        setDraw(true)\r\n        setRoundEnd(true)\r\n        sendMessage(\"ShowAll: \" + JSON.stringify(tiles))\r\n        setTiles([])\r\n      }\r\n    }\r\n  }, [lastMessage, setMessageHistory]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Username sendMessage={sendMessage} />\r\n      <Flex>\r\n        <Board clientID={clientID} tiles={tiles} newTile={newTile} handleSelectTile={handleSelectTile} currentTurn={currentTurn} currentPlayer={currentPlayer} gameState={gameState} discards={discards}  selectedTile={selectedTile} handleDiscard={handleDiscard} lastDiscard={lastDiscard} pongTiles={pongTiles} handlePong={handlePong}handleChow={handleChow} sequentialTiles={sequentialTiles} kongTiles={kongTiles} handleKong={handleKong} game={game} handleGame={handleGame} />\r\n        <Information tableWind={tableWind} yourWind={yourWind} playerID={clientID} currentPlayer={currentPlayer} gameState={gameState} handleNewGame={handleNewGame} roundEnd={roundEnd} onOpen={onOpenSummary} />\r\n      </Flex>\r\n\r\n      <Box>\r\n        <Summary username={gameState.find(e => e.playerID === winnerID)} roundEnd={roundEnd} summary={summary} handleNewGame={handleNewGame} draw={draw} isOpen={isOpenSummary} onOpen={onOpenSummary} onClose={onCloseSummary} />\r\n        <p>Connection Status: {connectionStatus}</p>\r\n      </Box>\r\n    </>\r\n  );\r\n};","export default __webpack_public_path__ + \"static/media/mahjongVid.74b8b9da.webm\";","import {Center,Text, Box, Button, InputGroup, Input, InputRightElement} from '@chakra-ui/react'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nimport bgVid from \"../videos/mahjongVid.webm\"\r\nimport \"../App.css\"\r\n\r\nexport default function Menu(){\r\n    let navigate = useNavigate()\r\n    const [gameCode, setGameCode] = useState(\"\")\r\n\r\n    function handleCodeChange(e) {\r\n        setGameCode(e.target.value)\r\n    }\r\n\r\n    function gameID() {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n        }\r\n        return s4() + s4() + s4();\r\n      };\r\n\r\n    function createGame() {\r\n        navigate(`/sgmahjong/game/${gameID()}`)\r\n    }\r\n\r\n    function handleJoin() {\r\n        if (gameCode.length < 10){\r\n            alert(\"No room found\")\r\n        }else{\r\n            navigate(`/sgmahjong/game/${gameCode}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Center h='100vh' w='100vw' bg='rgba(90,90,90,0.3)'>\r\n            <video autoPlay loop muted id='video'>\r\n                <source src={bgVid} type='video/webm' />\r\n            </video>\r\n            <Box w='300px' p=\"10px\" bgColor='rgba(240,240,240,0.9)' borderRadius=\"10px\">\r\n                <Center>\r\n                    <Text fontSize=\"24px\" textAlign='center'>Play <strong >Singapore Mahjong</strong> with your friends</Text>\r\n                </Center>\r\n                <Button onClick={createGame} w='100%' variant='outline' borderWidth=\"1px\" borderStyle='solid' borderColor='green' borderRadius=\"10px\">Create game</Button>\r\n                <InputGroup>\r\n                    <Input h='30px' px='2px' focusBorderColor='green' variant=\"flushed\"  placeholder='Invite Code' value={gameCode} onChange={(e) => handleCodeChange(e)} />\r\n                    <InputRightElement h='30px'>\r\n                        <Button h='25px' onClick={handleJoin} variant='outline'> Join </Button>\r\n                    </InputRightElement>\r\n                </InputGroup>\r\n            </Box>\r\n        </Center>\r\n    )\r\n}","import Table from \"./components/Table\";\nimport Menu from \"./components/Menu\";\nimport {\n  BrowserRouter as Router,\n  Routes, Route\n} from \"react-router-dom\"\n\nexport default function App() {\n  \n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/sgmahjong/\" exact element = {<Menu />} />\n        <Route path=\"/sgmahjong/game/:gameId\" exact element={<Table />} />\n      </Routes>\n    </Router>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {ChakraProvider} from '@chakra-ui/react'\n\nReactDOM.render(\n  <ChakraProvider>\n      <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}