{"version":3,"sources":["components/Mahjong.js","components/Tileset.js","components/NameCard.js","components/OtherPlayer.js","components/Discards.js","components/Unselect.js","components/Board.js","components/ChowSelector.js","components/Summary.js","components/Information.js","components/Draw.js","components/Username.js","components/Table.js","components/Menu.js","App.js","index.js"],"names":["compare","a","b","suit","value","getChow","chowSet","result","map","Map","item","has","set","push","id","picture","checkGame","tiles","revealed","bonusTiles","tableWind","yourWind","lastDiscard","drawn","summary","hand","concat","sort","mahjong","combination","name","points","lookupPair","reduce","e","pairs","filter","console","log","length","十三幺","十三幺Unique","v","JSON","stringify","values","chowSets","i","potentialChow","chowA","indexOf","chowB","findIndex","chowC","splice","lookup","pongSets","eye","checkMahjong","game","special","winningSet","suits","Set","honors","includes","one9","animals","animalPoints","winds","windPoints","dragon","dragonPoints","tableWindPoints","yourWindPoints","add","accumulator","combinationPoints","totalPoints","selfDrawn","Tileset","direction","spacing","tile","fontSize","textShadow","h","w","NameCard","playerID","currentPlayer","overflow","bg","px","borderRadius","borderWidth","borderColor","borderStyle","OtherPlayer","gameState","gameStateIndex","playerIndex","hiddenListV","Array","apply","handLength","username","revealedTiles","hiddenList","Discards","tileList","discards","idx","Unselect","props","ref","handleSelectTile","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","Board","clientID","newTile","currentTurn","selectedTile","handleDiscard","pong","handlePong","chow","handleChow","multiChow","handleMultiChow","handleGame","tileVariants","selected","y","unselected","color","motion","div","whileHover","scale","variants","animate","onClick","handleClickTile","m","mt","variant","isDisabled","position","zIndex","mb","ChowSelector","sequentialTiles","isOpen","onClose","Summary","winnerID","roundEnd","setRoundEnd","handleNewGame","draw","useDisclosure","onOpen","useState","newGame","setNewGame","setTimeout","Information","score","player","mr","align","isFitted","disabled","Draw","setDraw","Username","sendMessage","defaultIsOpen","setUsername","submitUsername","closeOnOverlayClick","onKeyPress","key","onChange","placeholder","my","type","Table","sequentialTiles_top","sequentialTiles_mid","sequentialTiles_bot","gameId","useParams","socketUrl","setMessageHistory","onlineUsers","setOnlineUsers","setClientID","setWinnerID","setCurrentPlayer","previousPlayer","setPreviousPlayer","setTiles","setNewTile","setBonusTiles","setRevealedTiles","setYourWind","setTableWind","setDiscards","setLastDiscard","setPong","setSequentialTiles","setChow","setMultiChow","setGame","setSummary","setCurrentTurn","setGameState","setSelectedTile","useWebSocket","lastMessage","readyState","connectionStatus","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","data","prev","userList","replace","gameState_temp","parse","clientID_temp","tiles_temp","game_temp","summary_temp","bonusTiles_temp","discards_temp","at","sameTiles","sequentialTiles_temp","checkValidMoves","revealedTiles_temp","newTiles","currentPlayer_temp","substring","split","discard_index","pongSet","Menu","navigate","useNavigate","p","s4","Math","floor","random","toString","gameID","App","path","exact","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0018b978.chunk.js","sourcesContent":["//sort hand\r\nexport function compare( a, b ) {\r\n    if ( a.suit < b.suit ){\r\n      return -1;\r\n    }\r\n    if ( a.suit > b.suit ){\r\n      return 1;\r\n    }\r\n    if ( a.suit === b.suit ){\r\n      if ( a.value < b.value ){\r\n        return -1;\r\n      }\r\n      if ( a.value > b.value ){\r\n        return 1;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\nexport function getChow(chowSet) {\r\n  const result = [];\r\n  const map = new Map();\r\n  for (const item of chowSet) {\r\n      if(!map.has(item.value)){\r\n          map.set(item.value, true);    // set any value to Map\r\n          result.push({\r\n              suit: item.suit,\r\n              value: item.value,\r\n              id: item.id,\r\n              picture: item.picture\r\n          });\r\n      }\r\n  }\r\n  return result\r\n}\r\n\r\nexport function checkMahjong(hand) {\r\n  //check for special cases\r\n  //1. 7 pair\r\n  const lookupPair = hand.reduce((a, e) => {\r\n    a[`${e.suit} ${e.value}`] = ++a[`${e.suit} ${e.value}`] || 0;\r\n    return a;\r\n  }, {});\r\n\r\n  let pairs = hand.filter(e => lookupPair[`${e.suit} ${e.value}`] === 1)\r\n\r\n  console.log(\"Pairs: \",pairs)\r\n  if (pairs.length === 14){\r\n    return [true, [], [], [], \"七对子\"]\r\n  }\r\n\r\n  //2. 13 wonders\r\n  let 十三幺 = hand.filter(e => (e.suit === \"bamboo\" && e.value === 1) || (e.suit === \"bamboo\" && e.value === 9) || (e.suit === \"circles\" && e.value === 1) || (e.suit === \"circles\" && e.value === 9) || (e.suit === \"numbers\" && e.value === 1) || (e.suit === \"numbers\" && e.value === 9) || (e.suit === \"~north\") || (e.suit === \"~south\") || (e.suit === \"~east\") || (e.suit === \"~west\") || (e.suit === \"~red\") || (e.suit === \"~green\") || (e.suit === \"~white\") )\r\n  console.log(\"十三幺: \",十三幺)\r\n  let 十三幺Unique =  [...new Map(十三幺.map(v => [JSON.stringify([v.suit,v.value]), v])).values()]\r\n  if (十三幺.length === 14 && 十三幺Unique.length === 13){\r\n    return [true,[],[],[],\"十三幺\"]\r\n  }\r\n\r\n  //filter out the chows\r\n  let chowSets = []\r\n  for (let i=hand.length - 1; i>=2; i--) {\r\n    if (hand[i]){\r\n      let potentialChow =  hand.filter(e => (e.suit === hand[i].suit) && (e.value === hand[i].value-1 || e.value === hand[i].value-2 ) )\r\n      potentialChow = getChow(potentialChow)\r\n      if (potentialChow.length === 2) {\r\n        chowSets = chowSets.concat([[potentialChow[0],potentialChow[1],hand[i]]])\r\n        let chowA = hand.indexOf(hand[i])\r\n        let chowB = hand.findIndex(e => (e.suit === potentialChow[1].suit && e.value === potentialChow[1].value && e.id === potentialChow[1].id))\r\n        let chowC = hand.findIndex(e => (e.suit === potentialChow[0].suit && e.value === potentialChow[0].value && e.id === potentialChow[0].id))\r\n        hand.splice(chowA,1)\r\n        hand.splice(chowB,1)\r\n        hand.splice(chowC,1)\r\n      }\r\n    }\r\n  }\r\n\r\n  //filter out the pongs\r\n  const lookup = hand.reduce((a, e) => {\r\n    a[`${e.suit} ${e.value}`] = ++a[`${e.suit} ${e.value}`] || 0;\r\n    return a;\r\n  }, {});\r\n\r\n  let pongSets = hand.filter(e => lookup[`${e.suit} ${e.value}`] >= 2)\r\n  hand = hand.filter(e => lookup[`${e.suit} ${e.value}`] < 2)\r\n\r\n  let eye = hand\r\n  console.log(\"Chow sets: \", chowSets)\r\n  console.log(\"Pong sets: \", pongSets)\r\n  console.log(\"Eye:\", eye)\r\n  //check eye\r\n  if (eye.length === 2){\r\n    if ((eye[0].suit === eye[1].suit) && (eye[0].value === eye[1].value)){\r\n      return [true, chowSets, pongSets, eye, null]\r\n    }\r\n  }\r\n\r\n  return [false]\r\n\r\n}\r\n\r\nexport function checkGame(tiles, revealed, bonusTiles,tableWind,yourWind, lastDiscard,drawn) {\r\n  let hand = tiles.concat(revealed.concat(lastDiscard).concat(drawn)).sort(compare)\r\n  let mahjong = tiles.concat(revealed.concat(lastDiscard).concat(drawn)).sort(compare)\r\n  let pointsLimit = 5\r\n  let summary\r\n\r\n  //Mahjong hands\r\n  let combination = [\r\n     {name: \"allPong\",\r\n     value: false,\r\n     points: 2},\r\n     {name: \"臭平和\",\r\n     value: false,\r\n     points: 1},\r\n     {name: \"平和\",\r\n     value: false,\r\n     points: 4},\r\n     {name: \"清一色\",\r\n     value: false,\r\n     points: 4},\r\n     {name: \"混一色\",\r\n     value: false,\r\n     points: 2},\r\n     {name: \"oneNine\",\r\n     value: false,\r\n     points: 5},\r\n     {name: \"halfOneNine\",\r\n     value: false,\r\n     points: 1},\r\n     {name: \"七对子\",\r\n     value: false,\r\n     points: 5},\r\n     {name: \"十三幺\",\r\n     value: false,\r\n     points: 5},\r\n  ]\r\n  \r\n  let [game, chowSets, pongSets, eye, special] = checkMahjong(hand)\r\n\r\n  //check strength of hand\r\n  if (special){\r\n    \r\n    if (special === \"七对子\"){\r\n      combination[combination.findIndex(e => e.name === \"七对子\")].value = true\r\n    } else if (special === \"十三幺\"){\r\n      combination[combination.findIndex(e => e.name === \"十三幺\")].value = true\r\n    }\r\n  }else if (game){\r\n    //all pong game\r\n    if (pongSets.length >= 12){\r\n      combination[combination.findIndex(e => e.name === \"allPong\")].value = true\r\n    }\r\n    //check allChow\r\n    // 1. The EYE cannot be a Dragon Tile or the Prevailing Wind or the Players Wind for that game\r\n    if (eye[0].suit != '~red' && eye[0].suit != '~green' && eye[0].suit !='~white' && eye[0].suit != tableWind && eye[0].suit != yourWind){\r\n      // 2. The tiles must be made up of one EYE and four CHOWs.\r\n      if (chowSets.length === 4){\r\n        // 3. If the player wins the game on a discarded tile, there must be more than one unique tile that could have caused the player to win the game\r\n        if (lastDiscard.length !== 0){\r\n          let winningSet = chowSets.filter(e => e.indexOf(lastDiscard) > 0 )\r\n          if (winningSet[0] === lastDiscard || winningSet[2] === lastDiscard) {\r\n            //check if there are bonus tiles\r\n            if (bonusTiles.length === 0){\r\n              combination[combination.findIndex(e => e.name === \"平和\")].value = true\r\n            }else{\r\n              combination[combination.findIndex(e => e.name === \"臭平和\")].value = true\r\n            }\r\n          }\r\n        //3a.if it's self-drawn\r\n        }else{\r\n          if (bonusTiles.length === 0){\r\n            combination[combination.findIndex(e => e.name === \"平和\")].value = true\r\n          }else{\r\n            combination[combination.findIndex(e => e.name === \"臭平和\")].value = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //check for color game\r\n    let suits = [...new Set(mahjong.map(e => e.suit))]\r\n    let honors = ['~east','~south','~west','~north','~red','~green','~white']\r\n    console.log(\"Suits: \", suits)\r\n    console.log(\"Filtered suits:\", suits.filter(e => !honors.includes(e)))\r\n\r\n    if (suits.length === 1){\r\n      combination[combination.findIndex(e => e.name === \"清一色\")].value = true\r\n    }else if (suits.filter(e => !honors.includes(e)).length === 1){\r\n      combination[combination.findIndex(e => e.name === \"混一色\")].value = true\r\n    }\r\n    //check for ones and nines\r\n    let one9 = [...new Set(mahjong.map(e => e.value))]\r\n    console.log(\"oneNine: \", one9.filter(e => e !== 9 && e !== 1 && e !== null))\r\n\r\n    if (one9.filter(e => e !== 9 && e !== 1).length === 0){\r\n      combination[combination.findIndex(e => e.name === \"oneNine\")].value = true\r\n    }else if (one9.filter(e => e !== 9 && e !== 1 && e !== null).length === 0){\r\n      combination[combination.findIndex(e => e.name === \"halfOneNine\")].value = true\r\n    }\r\n\r\n    //count points\r\n    let points = 0\r\n    //count bonus tiles\r\n    //animal tiles\r\n    let animals = ['cat','mouse','rooster','centipede']\r\n    let animalPoints = bonusTiles.filter(e => animals.includes(e.suit)).length\r\n    console.log(\"Animals: \", animalPoints)\r\n    //wind tiles\r\n    let winds = [\"~east\",\"~south\",\"~west\",\"~north\"]\r\n    let windPoints = bonusTiles.filter(e => !animals.includes(e.suit) && winds[e.value-1] === yourWind ).length\r\n    console.log(\"Winds: \", windPoints)\r\n    //find honors tiles in pong sets\r\n    let dragon = [\"~red\",\"~green\",\"~white\"]\r\n    let dragonPoints = (pongSets.filter(e => dragon.includes(e.suit)).length/3)\r\n    console.log(\"Dragon Tiles: \",dragonPoints)\r\n    let tableWindPoints = (pongSets.filter(e => e.suit === tableWind).length/3)\r\n    console.log(\"Table Wind: \",tableWindPoints)\r\n    let yourWindPoints = (pongSets.filter(e => e.suit === yourWind).length/3)\r\n    console.log(\"Your Wind: \",yourWindPoints)\r\n\r\n    function add(accumulator, a) {\r\n      return accumulator + a\r\n    }\r\n    //find the sum of all points in valid mahjong combinations\r\n    let combinationPoints = combination.filter(e => e.value === true).map(e => e.points).reduce(add,0)\r\n    console.log(\"Combi points: \", combinationPoints)\r\n\r\n    points = (dragonPoints+tableWindPoints+yourWindPoints + combinationPoints + animalPoints + windPoints > pointsLimit) ? pointsLimit : dragonPoints+tableWindPoints+yourWindPoints + combinationPoints + animalPoints + windPoints\r\n    console.log(\"Total points: \", points)\r\n\r\n    summary = {\r\n      animalPoints: animalPoints,\r\n      windPoints: windPoints,\r\n      dragonPoints: dragonPoints,\r\n      tableWindPoints: tableWindPoints,\r\n      yourWindPoints: yourWindPoints,\r\n      combinationPoints: combinationPoints,\r\n      totalPoints: points,\r\n      selfDrawn: lastDiscard.length === 0? true : false\r\n    } \r\n }\r\n\r\n  return [game, summary]\r\n}\r\n","import {HStack, VStack, Box, Center} from '@chakra-ui/react'\r\n\r\nexport default function Tileset({tiles, direction}) {\r\n  if (direction === \"vertical\"){\r\n    return (\r\n      <VStack spacing='0px'>\r\n      {tiles.map((tile) => {\r\n        return (\r\n          <Box fontSize={40} textShadow=\"3px 4px #343434\" h='5vh' w='6vh'>\r\n            {tile.picture}\r\n          </Box> \r\n          )\r\n      })}\r\n      </VStack>\r\n    )\r\n  }else{\r\n    return (\r\n      <HStack spacing='0px'>\r\n      {tiles.map((tile) => {\r\n        return (\r\n          <Box fontSize={40} textShadow=\"3px 4px #343434\" h='5vh' w='6vh'>\r\n            {tile.picture}\r\n          </Box> \r\n          )\r\n      })}\r\n      </HStack>\r\n    )\r\n  }\r\n}\r\n","import {Center, Text} from \"@chakra-ui/react\"\r\n\r\n\r\nexport default function NameCard({playerID, currentPlayer}){\r\n\r\n    return(\r\n            <Center >\r\n                <Text h='3vh' overflow=\"hidden\" bg={(currentPlayer===playerID) ? \"#f1f1f1\":null} px='5px' borderRadius=\"10px\" borderWidth=\"1px\" borderColor='black' borderStyle='solid'>\r\n                    {playerID}\r\n                </Text>\r\n            </Center>\r\n    )\r\n}","import {Box, HStack, VStack, Center} from \"@chakra-ui/react\"\r\nimport Tileset from \"./Tileset\"\r\nimport NameCard from './NameCard'\r\n\r\nexport default function OtherPlayer({gameState, gameStateIndex, currentPlayer, playerIndex}){\r\n\r\n    const hiddenList = (gameStateIndex) => {\r\n        let hiddenTemp = Array.apply(null, Array(gameState[gameStateIndex].handLength)).map(function () {})\r\n        const hidden = hiddenTemp.map(() => {\r\n            return(\r\n                <Box h='2vh' w='3.5vh'  borderRadius=\"5px\" borderWidth='1px' borderColor='black' borderStyle='solid' />\r\n            )\r\n        })\r\n        return(hidden)\r\n    }\r\n\r\n    const hiddenListV = (gameStateIndex) => {\r\n        let hiddenTemp = Array.apply(null, Array(gameState[gameStateIndex].handLength)).map(function () {})\r\n        const hidden = hiddenTemp.map(() => {\r\n            return(\r\n                <Box h='3.5vh' w='2vh' borderRadius=\"5px\" borderWidth='1px' borderColor='black' borderStyle='solid' />\r\n            )\r\n        })\r\n        return(hidden)\r\n    }\r\n\r\n    if (playerIndex === 1){\r\n        return(\r\n            <Box>\r\n                {gameState[(gameStateIndex+1)%4] &&\r\n                <VStack spacing='10px'>\r\n                    <NameCard playerID={gameState[(gameStateIndex+1)%4].username} currentPlayer={currentPlayer} />\r\n                    <HStack>\r\n                        <Box w='60px'>\r\n                            <Tileset direction=\"vertical\" tiles={gameState[(gameStateIndex+1)%4].revealedTiles.concat(gameState[(gameStateIndex+1)%4].bonusTiles)} />\r\n                        </Box>\r\n                        <Box>\r\n                            <VStack spacing='2px'>\r\n                                {hiddenListV((gameStateIndex+1)%4)}\r\n                            </VStack>\r\n                        </Box>\r\n                    </HStack>\r\n                </VStack>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else if (playerIndex === 2){\r\n        return(\r\n            <Box>\r\n                {gameState[(gameStateIndex+2)%4] &&\r\n                <>\r\n                    <NameCard playerID={gameState[(gameStateIndex+2)%4].username} currentPlayer={currentPlayer} />\r\n                    <Box>\r\n                        <HStack spacing='2px'>\r\n                            {hiddenList((gameStateIndex+2)%4)}\r\n                        </HStack>\r\n                        <Center>\r\n                            <Tileset tiles={gameState[(gameStateIndex+2)%4].revealedTiles.concat(gameState[(gameStateIndex+2)%4].bonusTiles)} />\r\n                        </Center>\r\n                    </Box>\r\n                </>\r\n                }\r\n            </Box>\r\n        )\r\n    }else if (playerIndex === 3){\r\n        return(\r\n            <Box>\r\n                {gameState[(gameStateIndex+3)%4] &&\r\n                    <VStack spacing='10px'>\r\n                        <NameCard playerID={gameState[(gameStateIndex+3)%4].username} currentPlayer={currentPlayer} />\r\n                        <HStack>\r\n                            <Box>\r\n                                <VStack spacing='2px'>\r\n                                    {hiddenListV((gameStateIndex+3)%4)}\r\n                                </VStack>\r\n                            </Box>\r\n                            <Box w='60px'>\r\n                                <Tileset direction=\"vertical\" tiles={gameState[(gameStateIndex+3)%4].revealedTiles.concat(gameState[(gameStateIndex+3)%4].bonusTiles)} />\r\n                            </Box>\r\n                        </HStack>\r\n                    </VStack>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n}","import {Box, Flex, Center, Wrap, WrapItem} from '@chakra-ui/react'\r\n\r\nexport default function Discards({discards}){\r\n\r\n    const tileList = discards.map((tile, idx) =>{\r\n        return (\r\n            <Box fontSize={40} textShadow=\"3px 4px #343434\" h='5vh' w='6vh'>\r\n                {tile.picture}\r\n            </Box> \r\n        )\r\n    })\r\n\r\n    return(\r\n        <Wrap spacing='1px' h='50vh' w='50vh' >\r\n                {tileList}\r\n        </Wrap>\r\n    )\r\n}","import React, { useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction useOutsideAlerter(ref,handleSelectTile) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                handleSelectTile(null)\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nexport default function Unselect(props) {\r\n    const wrapperRef = useRef(null);\r\n    useOutsideAlerter(wrapperRef,props.handleSelectTile);\r\n    \r\n    return <div ref={wrapperRef}>{props.children}</div>;\r\n}","import {Box, HStack, Center, Spacer, Button, VStack} from '@chakra-ui/react'\r\nimport Tileset from './Tileset'\r\nimport OtherPlayer from './OtherPlayer'\r\nimport Discards from './Discards'\r\nimport Unselect from './Unselect'\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport default function Board({clientID, tiles, newTile, handleSelectTile,currentTurn, currentPlayer, gameState, discards, selectedTile, handleDiscard, pong, handlePong, chow, handleChow, multiChow, handleMultiChow, game, handleGame}){\r\n    let gameStateIndex = gameState.findIndex(e => e.playerID === clientID)\r\n    \r\n    \r\n    const tileVariants = {\r\n        selected: {y:-15},\r\n        unselected: {y:0}\r\n    }\r\n\r\n    const handleClickTile = (tile) => {\r\n        if (selectedTile === tile && currentTurn){\r\n            handleDiscard()\r\n        }else{\r\n            handleSelectTile(tile)\r\n        }\r\n    }\r\n\r\n    //Render tiles\r\n    const tileList = tiles.map((tile, idx) =>{\r\n        var color = \"#343434\"\r\n        if (tile === newTile && currentTurn){\r\n            color = \"#ff4a4a\"\r\n        }\r\n\r\n        return (\r\n            \r\n                <motion.div whileHover={{scale:1.1}} variants={tileVariants} animate={(selectedTile === tile) ? 'selected':'unselected'} >\r\n                    <Box fontSize={40} textShadow={`3px 4px ${color}`} key={idx} value = {tile} onClick={() => handleClickTile(tile)} >\r\n                        {tile.picture}\r\n                    </Box>\r\n                </motion.div>\r\n        )\r\n\r\n    })\r\n\r\n\r\n    return(\r\n        <>\r\n        <VStack h='95vh' w='95vh' m='auto' mt='2vh' borderWidth='1px' borderColor='black' borderStyle='solid'>\r\n            <OtherPlayer gameState={gameState} gameStateIndex={gameStateIndex} currentPlayer={currentPlayer} playerIndex={2} />\r\n            <Spacer />\r\n            <HStack w='100%'>\r\n                <OtherPlayer gameState={gameState} gameStateIndex={gameStateIndex} currentPlayer={currentPlayer} playerIndex={3} />\r\n                <Spacer />\r\n                <Discards discards={discards} />\r\n                <Spacer />\r\n                <OtherPlayer gameState={gameState} gameStateIndex={gameStateIndex} currentPlayer={currentPlayer} playerIndex={1} />\r\n            </HStack>\r\n            <Spacer />\r\n            <HStack>\r\n                <Button variant=\"ghost\" isDisabled={!pong} onClick={handlePong}> 碰 </Button> \r\n                <Button variant=\"ghost\" isDisabled={!chow} onClick={ multiChow? handleMultiChow : handleChow}> 吃 </Button>\r\n                <Button variant=\"ghost\" isDisabled={!game} onClick={handleGame}> 胡 </Button> \r\n            </HStack>\r\n            <Spacer />\r\n            { gameState[gameStateIndex] &&\r\n            <Box position='relative' zIndex={2}>\r\n                <Box w='100%' m='auto'>\r\n                    <Center mb='5px'>\r\n                        <Tileset tiles={gameState[gameStateIndex].revealedTiles.concat(gameState[gameStateIndex].bonusTiles)} />\r\n                    </Center>\r\n                </Box>\r\n                <Box w='100%' m='auto'>\r\n                    <Center>\r\n                        <Unselect handleSelectTile={handleSelectTile}>\r\n                            <HStack spacing=\"0px\">\r\n                                {tileList}\r\n                            </HStack>\r\n                        </Unselect>\r\n                    </Center>\r\n                </Box>\r\n            </Box>\r\n            }\r\n        </VStack>\r\n        </>\r\n    )\r\n}","import {VStack, Box, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton} from '@chakra-ui/react'\r\nimport TileSet from './Tileset'\r\nimport { compare } from './Mahjong';\r\n\r\nexport default function ChowSelector({sequentialTiles, isOpen, onClose, handleChow, lastDiscard}) {\r\n  if (sequentialTiles){\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Select a set</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <VStack spacing={3}>\r\n                  {sequentialTiles.map((e) => {\r\n                    return(\r\n                      <Box onClick={() => {\r\n                        console.log(\"Selected chow set\", e)\r\n                        handleChow(e)\r\n                        }}>\r\n                        <TileSet tiles={e.concat(lastDiscard).sort(compare)} />\r\n                      </Box>\r\n                    )\r\n                  })}\r\n              </VStack>\r\n            </ModalBody>\r\n  \r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n  )}\r\n  return null\r\n}","import {Button, Box, Modal, ModalOverlay, ModalContent, ModalHeader, useDisclosure, ModalBody, ModalFooter, ModalCloseButton} from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\n\r\nexport default function Summary({winnerID, roundEnd, setRoundEnd, summary, handleNewGame, draw}) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()     \r\n    const [newGame, setNewGame] = useState(true)\r\n    \r\n    if (roundEnd && !isOpen){\r\n        onOpen()\r\n        setTimeout(() => {\r\n            setNewGame(false)}\r\n            ,3000)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setRoundEnd(false)\r\n        setNewGame(true)\r\n        onClose()\r\n    }\r\n\r\n    if (roundEnd && !draw){\r\n        \r\n        return (\r\n        <>\r\n            <Modal isOpen={isOpen} onClose={handleClose}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>{winnerID} wins!</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    Animal: {summary.animalPoints} <p />\r\n                    Seat flower: {summary.windPoints} <p />\r\n                    Dragon: {summary.dragonPoints} <p />\r\n                    Prevailing wind: {summary.tableWindPoints} <p />\r\n                    Seat wind: {summary.yourWindPoints} <p />\r\n                    Mahjong Points: {summary.combinationPoints} <p />\r\n                    Total Points: {summary.totalPoints} <p />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button isDisabled={newGame} onClick={handleNewGame} >New game</Button>\r\n                </ModalFooter>\r\n    \r\n            </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )}\r\n\r\n    return null\r\n}","import {Tabs, TabList, TabPanels, Tab, TabPanel, VStack, Spacer, Button, Text, Heading, Flex, Box} from '@chakra-ui/react'\r\n\r\nexport default function Information({tableWind,yourWind, currentPlayer, gameState, handleNewGame, roundEnd}){\r\n    const score = gameState.map((player) => {\r\n        return(\r\n            <Flex w='100%' >\r\n                {player.username}\r\n                <Spacer />\r\n                {player.score}\r\n            </Flex>\r\n        )\r\n    })\r\n    \r\n    return(\r\n        <Tabs w='200px' mr='10px' align='center' variant='enclosed' isFitted>\r\n            <TabList>\r\n                <Tab>Table</Tab>\r\n                <Tab>Scoring</Tab>\r\n            </TabList>\r\n\r\n            <TabPanels>\r\n                <TabPanel>\r\n                    <VStack spacing='25px'>\r\n                        <Box mt='5px'>\r\n                            <Flex w='190px'>Prevailing Wind <Spacer /> {tableWind}</Flex>\r\n                            <Flex w='190px'>Your Wind <Spacer /> {yourWind}</Flex>\r\n                        </Box>\r\n                        <Box>\r\n                            <Heading fontSize={20} mb='5px'>Leaderboard</Heading>\r\n                            <Box w='190px'>\r\n                                {score}\r\n                            </Box>\r\n                        </Box>\r\n                        <Flex w='190px'>\r\n                            <Spacer />\r\n                            <Button disabled={!roundEnd} onClick={handleNewGame} variant='outline'>New game</Button>\r\n                        </Flex>\r\n                        <Button onClick={handleNewGame} variant='outline'>New game (Debug)</Button>\r\n                    </VStack>\r\n\r\n                </TabPanel>\r\n                <TabPanel>\r\n                    \r\n                </TabPanel>\r\n            </TabPanels>\r\n        </Tabs>\r\n    )\r\n}\r\n","import {Button, Box, Modal, ModalOverlay, ModalContent, ModalHeader, useDisclosure, ModalBody, ModalFooter, ModalCloseButton} from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\n\r\nexport default function Draw({draw, setDraw, roundEnd,setRoundEnd, handleNewGame}) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()     \r\n    const [newGame, setNewGame] = useState(true)\r\n    \r\n    if (roundEnd && draw && !isOpen){\r\n        onOpen()\r\n        setTimeout(() => {\r\n            setNewGame(false)}\r\n            ,3000)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDraw(true)\r\n        setRoundEnd(false)\r\n        setNewGame(true)\r\n        onClose()\r\n    }\r\n\r\n    if (roundEnd){\r\n        \r\n        return (\r\n        <>\r\n            <Modal isOpen={isOpen} onClose={handleClose}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Nobody wins!</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button isDisabled={newGame} onClick={handleNewGame} >New game</Button>\r\n                </ModalFooter>\r\n    \r\n            </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )}\r\n\r\n    return null\r\n}","import {useState} from 'react'\r\nimport {Flex, Spacer, FormControl, Button, Input, Modal, ModalOverlay, ModalHeader,ModalBody, ModalContent, useDisclosure} from \"@chakra-ui/react\"\r\n\r\nexport default function Username({sendMessage}) {\r\n    const {isOpen, onOpen, onClose } = useDisclosure({defaultIsOpen:true})\r\n    const [username, setUsername] = useState('')\r\n\r\n    const onUsernameChange = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    //Set Username\r\n    const submitUsername = () => {\r\n        onClose()\r\n        sendMessage(\"Username: \"+username)\r\n    }\r\n    \r\n    return(\r\n        <Modal isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Username</ModalHeader>\r\n                <FormControl px='20px'>\r\n                    <Input onKeyPress={(e) => { (e.key===\"Enter\") ? submitUsername() : console.log() }} onChange={onUsernameChange} value={username} placeholder=\"Username\" />\r\n                    <Flex>\r\n                        <Spacer />\r\n                        <Button my='10px' onClick={submitUsername} type='submit'>Submit</Button>\r\n                    </Flex>\r\n                </FormControl>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\r\nimport {Flex, Box, Center, Button, useDisclosure} from '@chakra-ui/react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { checkGame, compare, getChow } from './Mahjong';\r\nimport Board from './Board'\r\nimport ChowSelector from './ChowSelector';\r\nimport Summary from './Summary';\r\nimport Information from './Information';\r\nimport Draw from './Draw';\r\nimport Username from './Username';\r\n\r\nexport default function Table() {\r\n  let sequentialTiles_top, sequentialTiles_mid, sequentialTiles_bot\r\n  const gameId = useParams().gameId\r\n  const [socketUrl, setSocketUrl] = useState(`ws://irscybersec.tk:3000/${gameId}`);\r\n  const [messageHistory, setMessageHistory] = useState([]);\r\n  //set users\r\n  const [onlineUsers, setOnlineUsers] = useState([])\r\n  const [clientID, setClientID] = useState([])\r\n  const [winnerID, setWinnerID] = useState()\r\n  const [currentPlayer, setCurrentPlayer] = useState()\r\n  const [previousPlayer, setPreviousPlayer] = useState(null)\r\n  //set tiles\r\n  const [tiles, setTiles] = useState([])\r\n  const [newTile, setNewTile] = useState()\r\n  const [bonusTiles, setBonusTiles] = useState([])\r\n  const [revealedTiles, setRevealedTiles] = useState([])\r\n  //set winds\r\n  const [yourWind, setYourWind] = useState('')\r\n  const [tableWind, setTableWind] = useState('')\r\n  //discard pile\r\n  const [discards, setDiscards] = useState([])\r\n  const [lastDiscard, setLastDiscard] = useState()\r\n  //moves\r\n  const [pong, setPong] = useState(false)\r\n  const { isOpen, onOpen, onClose } = useDisclosure() //for multichow\r\n  const [sequentialTiles, setSequentialTiles] = useState()\r\n  const [chow, setChow] = useState(false)\r\n  const [multiChow, setMultiChow] = useState(false)\r\n  const [game, setGame] = useState(false)\r\n  const [summary, setSummary] = useState()\r\n  //others\r\n  const [currentTurn, setCurrentTurn] = useState(false) //whether it is your turn\r\n  const [draw, setDraw] = useState(false)\r\n  const [roundEnd, setRoundEnd] = useState(false)\r\n  const [gameState, setGameState] = useState([]) \r\n  /* [  socket: Websocket,\r\n        playerID: playerID,\r\n        handLength: number of tiles,\r\n        bonusTiles: bonus tiles,\r\n        revealedTile\": revealed tiles }] */\r\n\r\n  //select tiles\r\n  const [selectedTile, setSelectedTile] = useState(null)\r\n  const handleSelectTile = (tile) => {\r\n    console.log(tile)\r\n    setSelectedTile(tile)\r\n  }\r\n\r\n  //discarding tiles\r\n  const handleDiscard = () => {\r\n    game ? setGame(false) : setGame(false) //if self-drawn, set game back to false\r\n    console.log(\"Discarding \", selectedTile)\r\n    sendMessage('Discard: ' + JSON.stringify(selectedTile))\r\n    //find the index of discarded tile in our hand\r\n    let discard_index = tiles.filter(e => !((e.suit===selectedTile.suit) && (e.value===selectedTile.value) && (e.id===selectedTile.id)) )\r\n\r\n    setTiles(discard_index)\r\n    setSelectedTile(null)\r\n    setCurrentTurn(false)\r\n  }\r\n\r\n  //functions for making moves (chow, pong, game)\r\n  const checkValidMoves = (lastDiscard) => {\r\n    if (lastDiscard){\r\n      //check for winning hand\r\n      let [game_temp, summary_temp] = checkGame(tiles,revealedTiles,bonusTiles,tableWind,yourWind, lastDiscard, [])\r\n      setSummary(summary_temp)\r\n      if (game_temp) {\r\n        setGame(game_temp)\r\n        setTimeout(() => {\r\n          setGame(false)\r\n        },3000)\r\n      }\r\n      //check for pong\r\n      let sameTiles = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value))\r\n      console.log(\"Same tiles: \", sameTiles)\r\n      if (sameTiles.length >= 2) {\r\n        setPong(true)\r\n        setTimeout(() => {\r\n          setPong(false)\r\n        },3000)\r\n      }\r\n\r\n      //check if last discard is from the guy before you\r\n      if (gameState.at(gameState.findIndex(e => e.playerID===clientID) - 1).playerID === previousPlayer){\r\n        //check for chow\r\n        sequentialTiles_top = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value-1 || e.value === lastDiscard.value-2 ) )\r\n        sequentialTiles_mid = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value-1 || e.value === lastDiscard.value+1 ) )\r\n        sequentialTiles_bot = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value+1 || e.value === lastDiscard.value+2 ) )\r\n        //check for unique chow values\r\n        sequentialTiles_top = getChow(sequentialTiles_top)\r\n        sequentialTiles_mid = getChow(sequentialTiles_mid)\r\n        sequentialTiles_bot = getChow(sequentialTiles_bot)\r\n        //check for multiple chows\r\n        let sequentialTiles_temp = [sequentialTiles_top,sequentialTiles_mid,sequentialTiles_bot].filter(e => e.length===2)\r\n        setSequentialTiles(sequentialTiles_temp)\r\n        \r\n        if (sequentialTiles_temp.length > 1){\r\n          setMultiChow(true)\r\n          setTimeout(() => {\r\n            setMultiChow(false)\r\n          },3000)\r\n        }\r\n\r\n        if (sequentialTiles_top.length == 2 || sequentialTiles_mid.length == 2 || sequentialTiles_bot.length == 2){\r\n          setChow(true)\r\n          setTimeout(() => {\r\n            setChow(false)\r\n          },3000)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handlePong = () => {\r\n    let pongSet = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value)).concat(lastDiscard)\r\n    sendMessage(clientID + \" pong \" + JSON.stringify(pongSet))\r\n    setPong(false)\r\n  }\r\n\r\n  const handleChow = (multiChow) => {\r\n    console.log(\"CHOW!\")\r\n    console.log(\"Sequential: \", sequentialTiles)\r\n    let chowSet=[]\r\n    //check for chow\r\n    sequentialTiles_top = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value-1 || e.value === lastDiscard.value-2 ) )\r\n    sequentialTiles_mid = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value-1 || e.value === lastDiscard.value+1 ) )\r\n    sequentialTiles_bot = tiles.filter(e => (e.suit === lastDiscard.suit) && (e.value === lastDiscard.value+1 || e.value === lastDiscard.value+2 ) )\r\n\r\n    if (sequentialTiles.length === 1){\r\n      chowSet = sequentialTiles[0].concat(lastDiscard)\r\n      console.log(\"Sequential Tiles:\", sequentialTiles_top)\r\n    }else if (sequentialTiles.length > 1){\r\n      chowSet = multiChow.concat(lastDiscard)\r\n      console.log(\"Sequential Tiles:\", sequentialTiles_top)\r\n      setMultiChow(false)\r\n      setSequentialTiles()\r\n      onClose()\r\n    }\r\n\r\n    sendMessage(clientID + \" chow \" + JSON.stringify(chowSet))\r\n    setChow(false)\r\n  }\r\n\r\n  const handleMultiChow = () => {\r\n    //check for multiple chows\r\n    if (!isOpen){\r\n      onOpen() //open modal\r\n      console.log(\"Multi Chow detector: \", sequentialTiles)\r\n      sendMessage(clientID + \" multichow \")\r\n    }\r\n    setMultiChow(false)\r\n  }\r\n\r\n  const handleGame = () => {\r\n    sendMessage(clientID + \" WINS! \"+JSON.stringify(summary)+\" \"+JSON.stringify(tiles))\r\n    setGame(false)\r\n  }\r\n\r\n  const handleNewGame = () => {\r\n    sendMessage(\"New game!\")\r\n  }\r\n\r\n  const {\r\n    sendMessage,\r\n    lastMessage,\r\n    readyState,\r\n  } = useWebSocket(socketUrl);\r\n\r\n  const connectionStatus = {\r\n    [ReadyState.CONNECTING]: 'Connecting',\r\n    [ReadyState.OPEN]: 'Connected',\r\n    [ReadyState.CLOSING]: 'Closing',\r\n    [ReadyState.CLOSED]: 'Closed',\r\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\r\n  }[readyState];\r\n  \r\n  useEffect(() => {\r\n    if (lastMessage !== null) {\r\n      console.log(\"Last message: \",lastMessage.data)\r\n      setMessageHistory(prev => prev.concat(lastMessage));\r\n      if (lastMessage.data.includes(\"Online users:\")) {\r\n        let userList = lastMessage.data.replace(\"Online users: \",\"\")\r\n        setOnlineUsers(userList)\r\n      }else if (lastMessage.data.includes(\"Game state\")) {\r\n        let gameState_temp = lastMessage.data.replace(\"Game state: \",\"\")\r\n        console.log(\"Game state: \", gameState_temp)\r\n        setGameState(JSON.parse(gameState_temp))\r\n      }else if (lastMessage.data.includes(\"Your ID\")) {\r\n        let clientID_temp = lastMessage.data.replace(\"Your ID: \",\"\")\r\n        setClientID(clientID_temp)\r\n      } else if (lastMessage.data.includes(\"Tiles\")) {\r\n        let tiles_temp = JSON.parse(lastMessage.data.replace(\"Tiles: \",\"\"))\r\n        if (tiles_temp.length === 13){\r\n          setTiles(tiles_temp.sort(compare)) //new hand\r\n        }else{\r\n          setTiles(prev => prev.concat(tiles_temp).sort(compare)) //new tile\r\n        }\r\n        setNewTile(tiles_temp)\r\n        console.log(\"New tiles:\", tiles_temp)\r\n        //if a new tile is drawn, check if 自摸\r\n        if (tiles_temp.length !== 13){\r\n          console.log(\"Tiles:\",tiles)\r\n          let [game_temp, summary_temp] = checkGame(tiles,revealedTiles,bonusTiles,tableWind,yourWind,[], tiles_temp)\r\n          setGame(game_temp)\r\n          setSummary(summary_temp)\r\n          console.log(summary_temp)\r\n        }\r\n      } else if (lastMessage.data.includes(\"Bonus\")) {\r\n        let bonusTiles_temp = JSON.parse(lastMessage.data.replace(\"Bonus: \",\"\"))\r\n        setBonusTiles(prev => prev.concat(bonusTiles_temp))\r\n      }else if (lastMessage.data.includes(\"Table wind\")) {\r\n        setTableWind(lastMessage.data.replace(\"Table wind: \",\"\"))\r\n      }else if (lastMessage.data.includes(\"Your wind\")) {\r\n        setYourWind(lastMessage.data.replace(\"Your wind: \",\"\"))\r\n      }else if (lastMessage.data.includes(\"It is your turn\")) {\r\n        setCurrentTurn(true)\r\n      }else if (lastMessage.data.includes(\"Discards\")) {\r\n        let discards_temp = JSON.parse(lastMessage.data.replace(\"Discards: \", \"\"))\r\n        setDiscards(discards_temp)\r\n        setLastDiscard(discards_temp.at(-1))\r\n        console.log(\"Last discarded\", discards_temp.at(-1))\r\n        checkValidMoves(discards_temp.at(-1))\r\n      }else if (lastMessage.data.includes(\"Previous player: \")) {\r\n        setPreviousPlayer(lastMessage.data.replace(\"Previous player: \",\"\"))\r\n      }else if (lastMessage.data.includes(\"Revealed\")) {\r\n        //sucessfull move made\r\n        let revealedTiles_temp = JSON.parse(lastMessage.data.replace(\"Revealed: \",\"\"))\r\n        let newTiles = tiles\r\n        console.log(\"New Tiles: \", newTiles)\r\n\r\n        for (let i=0; i<revealedTiles_temp.length; i++){\r\n          console.log(\"Target: \",revealedTiles_temp[i])\r\n          console.log(\"Target Index: \", newTiles.indexOf(revealedTiles_temp[i]))\r\n          newTiles = newTiles.filter((tile) => !((tile.suit === revealedTiles_temp[i].suit) && (tile.value === revealedTiles_temp[i].value)))\r\n        }\r\n        setTiles(newTiles)\r\n        setRevealedTiles(prev => prev.concat(revealedTiles_temp).sort(compare))\r\n      }else if (lastMessage.data.includes(\"Current player: \")){\r\n        let currentPlayer_temp = lastMessage.data.replace(\"Current player: \",\"\")\r\n        setCurrentPlayer(currentPlayer_temp.substring(1, currentPlayer_temp.length-1))\r\n      }else if (lastMessage.data.includes(\"New game!\")) {\r\n        setRoundEnd(false)\r\n        setDiscards([])\r\n        setLastDiscard()\r\n        setTiles([])\r\n        setBonusTiles([])\r\n        setRevealedTiles([])\r\n        setSelectedTile()\r\n        setSummary()\r\n      }else if (lastMessage.data.includes(\"wins\")) {\r\n        setRoundEnd(true)\r\n        let summary_temp = JSON.parse(lastMessage.data.split(\" \")[2])\r\n        setSummary(summary_temp)\r\n        setWinnerID(lastMessage.data.split(\" \")[0])\r\n      }else if (lastMessage.data.includes(\"Draw:\")) {\r\n        setDraw(true)\r\n        setRoundEnd(true)\r\n      }\r\n    }\r\n  }, [lastMessage, setMessageHistory]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Username sendMessage={sendMessage} />\r\n      <Flex>\r\n        <Board clientID={clientID} tiles={tiles} newTile={newTile} handleSelectTile={handleSelectTile} currentTurn={currentTurn} currentPlayer={currentPlayer} gameState={gameState} discards={discards}  selectedTile={selectedTile} handleDiscard={handleDiscard} pong={pong} handlePong={handlePong} chow={chow} handleChow={handleChow} multiChow={multiChow} handleMultiChow={handleMultiChow} game={game} handleGame={handleGame} />\r\n        <Information tableWind={tableWind} yourWind={yourWind} currentPlayer={currentPlayer} gameState={gameState} handleNewGame={handleNewGame} roundEnd={roundEnd} />\r\n      </Flex>\r\n\r\n      <Box>\r\n        <ChowSelector sequentialTiles={sequentialTiles} isOpen={isOpen} onClose={onClose} handleChow = {handleChow} lastDiscard = {lastDiscard} />\r\n        <Summary winnerID={winnerID} roundEnd={roundEnd} setRoundEnd={setRoundEnd} summary={summary} handleNewGame={handleNewGame} draw={draw} />\r\n        <Draw draw={draw} setDraw={setDraw} roundEnd={roundEnd} setRoundEnd={setRoundEnd} handleNewGame={handleNewGame} />\r\n        <p>Online Users: {onlineUsers} </p>\r\n\r\n        <p>Connection Status: {connectionStatus}</p>\r\n      </Box>\r\n    </>\r\n  );\r\n};","import {Center,Text, Box, Button} from '@chakra-ui/react'\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nexport default function Menu(){\r\n    let navigate = useNavigate()\r\n\r\n    function gameID() {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n        }\r\n        return s4() + s4() + s4();\r\n      };\r\n\r\n    function createGame() {\r\n        navigate(`/sgmahjong/game/${gameID()}`)\r\n    }\r\n\r\n    return (\r\n        <Center h='100vh' w='100vw'>\r\n            <Box p=\"10px\" borderWidth=\"2px\" borderStyle='solid' borderColor='green' borderRadius=\"10px\">\r\n                <Text>Online Mahjong with your friends </Text>\r\n                <Button onClick={createGame} w='100%' variant='outline'>Create game</Button>\r\n            </Box>\r\n        </Center>\r\n    )\r\n}","import Table from \"./components/Table\";\nimport Menu from \"./components/Menu\";\nimport {\n  BrowserRouter as Router,\n  Routes, Route\n} from \"react-router-dom\"\n\nexport default function App() {\n  \n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/sgmahjong\" exact element = {<Menu />} />\n        <Route path=\"/sgmahjong/game/:gameId\" exact element={<Table />} />\n      </Routes>\n    </Router>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {ChakraProvider} from '@chakra-ui/react'\n\nReactDOM.render(\n  <ChakraProvider>\n      <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}